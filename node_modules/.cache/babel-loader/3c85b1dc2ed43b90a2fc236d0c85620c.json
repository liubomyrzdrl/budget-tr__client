{"ast":null,"code":"import { handleActions } from \"redux-actions\";\nimport { getEntriesStart, getEntriesSuccess, getEntriesError, createEntryStart, createEntrySuccess, createEntryError, updateEntryStart, updateEntrySuccess, updateEntryError, deleteEntryStart, deleteEntrySuccess, deleteEntryError } from \"./entriesActions\";\nconst INITIAL_STATE = {\n  items: [],\n  isLoading: false,\n  isSuccess: false,\n  isError: null\n};\nconst entriesReducer = handleActions({\n  [getEntriesStart.toString()]: state => {\n    return { ...state,\n      isLoading: true\n    };\n  },\n  [getEntriesSuccess.toString()]: (state, {\n    payload\n  }) => {\n    return { ...state,\n      items: payload,\n      isLoading: false,\n      isSuccess: true\n    };\n  },\n  [getEntriesError.toString()]: state => {\n    return { ...state,\n      isLoading: false,\n      isError: null\n    };\n  },\n  [createEntryStart.toString()]: state => {\n    return { ...state,\n      isLoading: true\n    };\n  },\n  [createEntrySuccess.toString()]: (state, {\n    payload\n  }) => {\n    return { ...state,\n      items: [payload, ...state.items],\n      isLoading: false,\n      isSuccess: true\n    };\n  },\n  [createEntryError.toString()]: state => {\n    return { ...state,\n      isLoading: false,\n      isError: null\n    };\n  },\n  [updateEntryStart.toString()]: state => {\n    return { ...state,\n      isLoading: true\n    };\n  },\n  [updateEntrySuccess.toString()]: (state, {\n    payload\n  }) => {\n    var _state$items;\n\n    console.log(\"Uodate PAYLOAD\", payload);\n    return { ...state,\n      items: (_state$items = state.items) === null || _state$items === void 0 ? void 0 : _state$items.map(item => {\n        if (item.id === payload.id) {\n          item = payload;\n        }\n\n        return item;\n      }),\n      isLoading: false,\n      isSuccess: true\n    };\n  },\n  [updateEntryError.toString()]: state => {\n    return { ...state,\n      isLoading: false,\n      isError: null\n    };\n  },\n  [deleteEntryStart.toString()]: state => {\n    return { ...state,\n      isLoading: true\n    };\n  },\n  [deleteEntrySuccess.toString()]: (state, {\n    payload\n  }) => {\n    var _state$items2;\n\n    console.log(\"Uodate Delete\", payload);\n    return { ...state,\n      items: (_state$items2 = state.items) === null || _state$items2 === void 0 ? void 0 : _state$items2.filter(item => item.id !== payload),\n      isLoading: false,\n      isSuccess: true\n    };\n  },\n  [deleteEntryError.toString()]: state => {\n    return { ...state,\n      isLoading: false,\n      isError: null\n    };\n  }\n}, INITIAL_STATE);\nexport default entriesReducer;","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/modules/entries/entriesReducer.ts"],"names":["handleActions","getEntriesStart","getEntriesSuccess","getEntriesError","createEntryStart","createEntrySuccess","createEntryError","updateEntryStart","updateEntrySuccess","updateEntryError","deleteEntryStart","deleteEntrySuccess","deleteEntryError","INITIAL_STATE","items","isLoading","isSuccess","isError","entriesReducer","toString","state","payload","console","log","map","item","id","filter"],"mappings":"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","sourcesContent":["import { handleActions, Action } from \"redux-actions\";\nimport {\n  getEntriesStart,\n  getEntriesSuccess,\n  getEntriesError,\n  GetEntriesSuccessPayload,\n  CreateEntrySuccessPayload,\n  createEntryStart,\n  createEntrySuccess,\n  createEntryError,\n  CombinedPayloads,\n  updateEntryStart,\n  updateEntrySuccess,\n  updateEntryError,\n  UpdateEntrySuccessPayload,\n  deleteEntryStart,\n  deleteEntrySuccess,\n  deleteEntryError,\n  DeleteEntrySuccessPayload,\n} from \"./entriesActions\";\nimport { EntrieType } from \"../../types\";\n\n// type LatestProductsType ={\n//    items?: Array<BankType>\n//    isLoading: boolean\n//    isSuccess?: boolean\n//    isError?: boolean | any\n// }\n// type ProductType = {\n//    item?: BankType | null\n//    isLoading: boolean\n//    isSuccess?: boolean\n//    isError?: boolean | any\n// }\nexport interface EntryStateType {\n  items: Array<any>;\n  isLoading: boolean;\n  isSuccess?: boolean;\n  isError?: boolean | null;\n}\n\nconst INITIAL_STATE: EntryStateType = {\n  items: [],\n  isLoading: false,\n  isSuccess: false,\n  isError: null,\n};\n\nconst entriesReducer = handleActions<EntryStateType, CombinedPayloads>(\n  {\n    [getEntriesStart.toString()]: (state): EntryStateType => {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    },\n\n    [getEntriesSuccess.toString()]: (\n      state,\n      { payload }: Action<GetEntriesSuccessPayload>\n    ): EntryStateType => {\n      return {\n        ...state,\n        items: payload,\n        isLoading: false,\n        isSuccess: true,\n      };\n    },\n\n    [getEntriesError.toString()]: (state): EntryStateType => {\n      return {\n        ...state,\n        isLoading: false,\n        isError: null,\n      };\n    },\n\n    [createEntryStart.toString()]: (state): EntryStateType => {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    },\n\n    [createEntrySuccess.toString()]: (\n      state,\n      { payload }: Action<CreateEntrySuccessPayload>\n    ): EntryStateType => {\n      return {\n        ...state,\n        items: [payload, ...state.items],\n        isLoading: false,\n        isSuccess: true,\n      };\n    },\n\n    [createEntryError.toString()]: (state): EntryStateType => {\n      return {\n        ...state,\n        isLoading: false,\n        isError: null,\n      };\n    },\n\n    [updateEntryStart.toString()]: (state): EntryStateType => {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    },\n\n    [updateEntrySuccess.toString()]: (\n      state,\n      { payload }: Action<any>\n    ): EntryStateType => {\n      console.log(\"Uodate PAYLOAD\", payload);\n      return {\n        ...state,\n\n        items: state.items?.map((item) => {\n          if (item.id === payload.id) {\n            item = payload;\n          }\n          return item;\n        }),\n        isLoading: false,\n        isSuccess: true,\n      };\n    },\n\n    [updateEntryError.toString()]: (state): EntryStateType => {\n      return {\n        ...state,\n        isLoading: false,\n        isError: null,\n      };\n    },\n\n    [deleteEntryStart.toString()]: (state): EntryStateType => {\n      return {\n        ...state,\n        isLoading: true,\n      };\n    },\n\n    [deleteEntrySuccess.toString()]: (\n      state,\n      { payload }: Action<any>\n    ): EntryStateType => {\n      console.log(\"Uodate Delete\", payload);\n      return {\n        ...state,\n        items: state.items?.filter((item) => item.id !== payload),\n        isLoading: false,\n        isSuccess: true,\n      };\n    },\n\n    [deleteEntryError.toString()]: (state): EntryStateType => {\n      return {\n        ...state,\n        isLoading: false,\n        isError: null,\n      };\n    },\n  },\n  INITIAL_STATE\n);\n\nexport default entriesReducer;\n"]},"metadata":{},"sourceType":"module"}