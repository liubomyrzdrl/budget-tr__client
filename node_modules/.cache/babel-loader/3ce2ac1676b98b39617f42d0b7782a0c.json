{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/Entries.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { createEntry, getEntries } from '../../modules/entries/entriesOperation';\nimport FormField from \"../Form/FromField\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport EntriesItems from './EntriesItems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n})); // interface BanksListPropsType {\n//   get: any;\n//   isLoading: boolean;\n//   banks: Array<BankType>;\n//   createBank:(bank: BankType) => Promise<boolean>;\n//   updateBank: (bank: BankType) => Promise<boolean>;\n//   deleteBank: (_id: string) => Promise<boolean>;\n// }\n\nconst Entries = ({\n  user,\n  createEntry,\n  getEntries,\n  entries,\n  isLoading\n}) => {\n  _s();\n\n  const [date, setDate] = useState('2021-04-21');\n  const [amount, setAmount] = useState('');\n  const classes = useStyles();\n  const history = useHistory(); // useEffect(() => {\n  //   createEntry();\n  // }, [createEntry]);\n  // if (isLoading) {\n  //   return <div>Loading ...</div>;\n  // }\n  //  <Link to={`/entry/userId:${user.id}&date:${date}`}> </Link>\n\n  useEffect(() => {\n    history.push(`/e/${user.id}/${date}`);\n  }, [date, history, user.id]);\n\n  function handeleChange(e) {\n    console.log(e.target.value);\n    setDate(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          catagorie: \"\",\n          amount: \"\"\n        },\n        onSubmit: async (values, actions) => {\n          try {\n            await createEntry({\n              amount: values.amount,\n              catagorie: values.catagorie,\n              userId: user.id,\n              date\n            });\n          } catch (error) {\n            console.log('Error', error);\n          }\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"date\",\n              label: \"Birthday\",\n              onChange: handeleChange,\n              value: date,\n              type: \"date\",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"amount\",\n              onChange: handeleChange,\n              value: amount,\n              type: \"text\",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(FormField, { ...props,\n              name: \"catagorie\",\n              placeholder: \"Catagory\",\n              label: \"catagorie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Create Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: `/e/:userId/:date`,\n        children: /*#__PURE__*/_jsxDEV(EntriesItems, {\n          getEntries: getEntries,\n          entries,\n          isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Entries, \"5uZNkGRiN0Tqc+Zdnp503D0aL24=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Entries;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.userReducer.data,\n    entries: state.entriesReducer.items,\n    isLoading: state.entriesReducer.isLoading\n  };\n};\n\nconst mapDispatchToState = {\n  createEntry,\n  getEntries\n};\nexport default connect(mapStateToProps, mapDispatchToState)(Entries);\n\nvar _c;\n\n$RefreshReg$(_c, \"Entries\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/Entries.tsx"],"names":["React","useEffect","useState","Box","Button","TextField","makeStyles","connect","Formik","Form","createEntry","getEntries","FormField","Route","useHistory","EntriesItems","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","Entries","user","entries","isLoading","date","setDate","amount","setAmount","classes","history","push","id","handeleChange","e","console","log","target","value","catagorie","values","actions","userId","error","props","shrink","mapStateToProps","state","userReducer","data","entriesReducer","items","mapDispatchToState"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Box, Button, TextField, makeStyles, } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { createEntry, getEntries } from '../../modules/entries/entriesOperation'\nimport FormField from \"../Form/FromField\"\nimport { Route,  useHistory } from \"react-router-dom\"\nimport EntriesItems from './EntriesItems'\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\n// interface BanksListPropsType {\n//   get: any;\n//   isLoading: boolean;\n//   banks: Array<BankType>;\n//   createBank:(bank: BankType) => Promise<boolean>;\n//   updateBank: (bank: BankType) => Promise<boolean>;\n//   deleteBank: (_id: string) => Promise<boolean>;\n// }\n\nconst Entries: React.FC<{}> = ({ user, createEntry, getEntries, entries, isLoading }) => {\n  const [date, setDate] = useState('2021-04-21')\n  const [amount, setAmount] = useState('')\n  const classes = useStyles();\n  const history = useHistory()\n\n  // useEffect(() => {\n  //   createEntry();\n  // }, [createEntry]);\n\n  // if (isLoading) {\n  //   return <div>Loading ...</div>;\n  // }\n//  <Link to={`/entry/userId:${user.id}&date:${date}`}> </Link>\n  useEffect(() => {\n   history.push(`/e/${user.id}/${date}`)\n  },[date, history, user.id])\n\n  function handeleChange(e) {\n    console.log(e.target.value)\n    setDate(e.target.value)   \n  }\n\n  return (\n    <Box>\n       {/* <h4>Entries\n         <Link to={`/e/${user.id}/${date}`}>entru</Link>\n       </h4> */}\n       <Box>\n                <Formik\n                    initialValues={{\n                        catagorie: \"\",\n                        amount: \"\"\n                    }}\n                    onSubmit={async (values, actions) => {\n                        try {\n                          await createEntry({\n                            amount: values.amount,\n                            catagorie: values.catagorie, \n                            userId: user.id,\n                            date,\n                          })       \n                                           \n                        } catch (error) {\n                          console.log('Error', error)                          \n                        }\n                        \n                    }}\n                >   \n                    {(props) => (\n                    <Form>                    \n                        <Box>                        \n                        <TextField\n                            id=\"date\"\n                            label=\"Birthday\"\n                            onChange={handeleChange}\n                            value={date}\n                            type=\"date\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                            shrink: true,\n                          }}\n                        />\n                        </Box>\n                       \n                        <Box>\n                        <TextField\n                            \n                            label=\"amount\"\n                            onChange={handeleChange}\n                            value={amount}\n                            type=\"text\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                            shrink: true,\n                          }}\n                        />\n                            {/* <FormField\n                                {...props}\n                          \n                                name=\"amount\"\n                                placeholder=\"Spent amount $\"\n                                label=\"amount\"\n                            /> */}\n                        </Box>\n                        <Box>\n                            <FormField\n                                {...props}\n                                name=\"catagorie\"\n                                placeholder=\"Catagory\"\n                                label=\"catagorie\"\n                            />\n                        </Box>\n                        <Button type=\"submit\">\n                              Create Entry\n                        </Button>    \n                    </Form>\n                    )}\n                </Formik>\n            </Box>\n    <Box>    \n        <Route path={`/e/:userId/:date`}>\n            <EntriesItems getEntries={getEntries} {...{entries}} {...{isLoading}} />    \n        </Route>\n    </Box>\n    </Box>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    user: state.userReducer.data,\n    entries: state.entriesReducer.items,\n    isLoading: state.entriesReducer.isLoading,\n  };\n};\n\nconst mapDispatchToState = {\n  createEntry,\n  getEntries\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToState)(Entries);\n"]},"metadata":{},"sourceType":"module"}