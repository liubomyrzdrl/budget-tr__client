{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/EntriesList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport red from \"@material-ui/core/colors/red\";\nimport { useParams } from \"react-router-dom\";\nimport EntryItem from \"./EntryItem\";\nimport { Box, TableContainer, Paper, Table, TableBody } from \"@material-ui/core\";\nimport { createData } from \"../../utils/createData\";\nimport \"./entries.scss\";\nimport './entries.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 250,\n    borderCollapse: \"separate\",\n    borderSpacing: \"10px\"\n  }\n});\n\nconst EntriesItems = ({\n  getEntries,\n  updateEntry,\n  deleteEntry,\n  entries,\n  isLoadingEntries\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    userId,\n    date\n  } = useParams();\n  let total = entries.reduce((acc, item) => {\n    return acc + Number(item.amount);\n  }, 0);\n  const rows = entries.map(e => createData(e.id, e.catagorie, e.amount, e.date));\n  useEffect(() => {\n    getEntries(userId, date);\n  }, [getEntries, date, userId]);\n\n  if (isLoadingEntries) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Day spending: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), entries.length && /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        width: \"60%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        size: \"small\",\n        \"aria-label\": \"a dense table\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(EntryItem, { ...row,\n            userId,\n            updateEntry,\n            deleteEntry,\n            isLoadingEntries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: \"20%\",\n      fontSize: \"bold\",\n      color: red[500],\n      marginTop: 2,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"total-spend\",\n        children: \"Total:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [total, \" $\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EntriesItems, \"SZ09BAdVf/gkN/Ppc2nCfX4yD0A=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = EntriesItems;\nexport default EntriesItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntriesItems\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/EntriesList.tsx"],"names":["React","useEffect","makeStyles","red","useParams","EntryItem","Box","TableContainer","Paper","Table","TableBody","createData","useStyles","table","minWidth","borderCollapse","borderSpacing","EntriesItems","getEntries","updateEntry","deleteEntry","entries","isLoadingEntries","classes","userId","date","total","reduce","acc","item","Number","amount","rows","map","e","id","catagorie","length","width","row"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport red from \"@material-ui/core/colors/red\";\nimport { useParams } from \"react-router-dom\";\nimport EntryItem from \"./EntryItem\";\nimport {\n  Box,\n  TableContainer,\n  Paper,\n  Table,\n  TableBody,\n} from \"@material-ui/core\";\nimport { createData } from \"../../utils/createData\";\nimport \"./entries.scss\";\nimport { EntrySingleType, EntrieType } from \"../../types\"\nimport  './entries.scss'\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 250,\n    borderCollapse: \"separate\",\n    borderSpacing: \"10px\",\n  },\n});\n\ntype EntriesItemsType = {\n  isLoadingEntries: boolean\n  entries: Array<EntrySingleType>\n  deleteEntry: (id: number) => boolean\n  getEntries: (userId: number, date: string) => Array<EntrieType>\n  updateEntry: (entry: EntrySingleType ) => EntrySingleType\n}\n\nconst EntriesItems: React.FC<EntriesItemsType> = ({\n  getEntries,\n  updateEntry,\n  deleteEntry,\n  entries,\n  isLoadingEntries,\n}) => {\n  const classes = useStyles();\n  const { userId, date } = useParams();\n  let total: number = entries.reduce((acc, item) => {\n    return acc + Number(item.amount);\n  }, 0);\n\n  const rows = entries.map((e) =>\n    createData(e.id, e.catagorie, e.amount, e.date)\n  );\n\n  useEffect(() => {\n    getEntries(userId, date);\n  }, [getEntries, date, userId]);\n\n  if (isLoadingEntries) {\n    return <div>Loading ...</div>;\n  }\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"column\">\n      <h2>Day spending: </h2>\n      {entries.length && (\n         <TableContainer component={Paper} style={{ width: \"60%\" }}>\n         <Table\n           className={classes.table}\n           size=\"small\"\n           aria-label=\"a dense table\"\n         >\n           <TableBody>\n             {rows.map((row) => (\n               <EntryItem\n                 {...row}\n                 {...{ userId }}\n                 {...{ updateEntry }}\n                 {...{ deleteEntry }}\n                 {...{ isLoadingEntries }}\n               />\n             ))}\n           </TableBody>\n         </Table>\n       </TableContainer>\n        \n      )}\n     \n      <Box display=\"flex\" justifyContent=\"space-between\" width={\"20%\"} fontSize=\"bold\" color={red[500]} marginTop={2}>\n        <span className=\"total-spend\">Total:</span> <span>{total} $</span>\n      </Box>\n    </Box>\n  );\n};\n\nexport default EntriesItems;\n"]},"metadata":{},"sourceType":"module"}