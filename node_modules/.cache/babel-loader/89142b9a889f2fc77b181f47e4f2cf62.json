{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/Entries.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { createEntry, getEntries, updateEntry, deleteEntry } from \"../../modules/entries/entriesOperation\";\nimport FormField from \"../Form/FromField\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport EntriesItems from \"./EntriesList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nconst Entries = ({\n  user,\n  createEntry,\n  getEntries,\n  updateEntry,\n  deleteEntry,\n  entries,\n  isLoading\n}) => {\n  _s();\n\n  const [date, setDate] = useState(\"2021-04-21\");\n  const [amount, setAmount] = useState(\"\");\n  const [catagorie, setCatagorie] = useState(\"\");\n  const classes = useStyles();\n  const history = useHistory();\n  const userId = user.id;\n  useEffect(() => {\n    history.push(`/e/${user.id}/${date}`);\n  }, [date, history, user.id]);\n\n  function handeleDate(e) {\n    console.log(e.target.value);\n    setDate(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          catagorie: \"\",\n          amount: \"\"\n        },\n        onSubmit: async (values, actions) => {\n          try {\n            await createEntry({\n              amount: values.amount,\n              catagorie: values.catagorie,\n              userId: user.id,\n              date\n            });\n            console.log(\"Values\", values, date, user.id);\n            actions.resetForm();\n          } catch (error) {\n            console.log(\"Error\", error);\n          }\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mr: 15,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"date\",\n                label: \"Trecker\",\n                onChange: handeleDate,\n                value: date,\n                type: \"date\",\n                className: classes.textField,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mb: 3,\n                children: /*#__PURE__*/_jsxDEV(FormField, { ...props,\n                  name: \"amount\",\n                  placeholder: \"Spent amount $\",\n                  label: \"amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mb: 3,\n                children: /*#__PURE__*/_jsxDEV(FormField, { ...props,\n                  name: \"catagorie\",\n                  placeholder: \"Catagory\",\n                  label: \"catagorie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                type: \"submit\",\n                children: \"Create Entry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: `/e/:userId/:date`,\n        children: /*#__PURE__*/_jsxDEV(EntriesItems, {\n          userId,\n          getEntries: getEntries,\n          updateEntry: updateEntry,\n          deleteEntry,\n          entries,\n          isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Entries, \"q/t3sbUsChwgFrk4hjxTEhgIVIs=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Entries;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.userReducer.data,\n    entries: state.entriesReducer.items,\n    isLoading: state.entriesReducer.isLoading\n  };\n};\n\nconst mapDispatchToState = {\n  createEntry,\n  getEntries,\n  updateEntry,\n  deleteEntry\n};\nexport default connect(mapStateToProps, mapDispatchToState)(Entries);\n\nvar _c;\n\n$RefreshReg$(_c, \"Entries\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/Entries.tsx"],"names":["React","useEffect","useState","Box","Button","TextField","makeStyles","connect","Formik","Form","createEntry","getEntries","updateEntry","deleteEntry","FormField","Route","useHistory","EntriesItems","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","Entries","user","entries","isLoading","date","setDate","amount","setAmount","catagorie","setCatagorie","classes","history","userId","id","push","handeleDate","e","console","log","target","value","values","actions","resetForm","error","props","shrink","mapStateToProps","state","userReducer","data","entriesReducer","items","mapDispatchToState"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport {\n  createEntry,\n  getEntries,\n  updateEntry,\n  deleteEntry,\n} from \"../../modules/entries/entriesOperation\";\nimport FormField from \"../Form/FromField\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport EntriesItems from \"./EntriesList\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\n\nconst Entries: React.FC<{}> = ({\n  user,\n  createEntry,\n  getEntries,\n  updateEntry,\n  deleteEntry,\n  entries,\n  isLoading,\n}) => {\n  const [date, setDate] = useState(\"2021-04-21\");\n  const [amount, setAmount] = useState(\"\");\n  const [catagorie, setCatagorie] = useState(\"\");\n  const classes = useStyles();\n  const history = useHistory();\n  const userId = user.id\n\n  useEffect(() => {\n    history.push(`/e/${user.id}/${date}`);\n  }, [date, history, user.id]);\n\n  function handeleDate(e) {\n    console.log(e.target.value);\n    setDate(e.target.value);\n  }\n \n  return (\n    <Box>\n      <Box>\n        <Formik\n          initialValues={{\n            catagorie: \"\",\n            amount: \"\",\n          }}\n          onSubmit={async (values, actions) => {\n            try {\n              await createEntry({\n                amount: values.amount,\n                catagorie: values.catagorie,\n                userId: user.id,\n                date,\n              });\n              console.log(\"Values\", values, date, user.id ,)\n              actions.resetForm()\n            } catch (error) {\n              console.log(\"Error\", error);\n            }\n          }}\n        >\n          {(props) => (\n            <Form>\n              <Box display=\"flex\">\n                <Box mr={15}>\n                  <TextField\n                    id=\"date\"\n                    label=\"Trecker\"\n                    onChange={handeleDate}\n                    value={date}\n                    type=\"date\"\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Box>\n                <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">  \n                <Box mb={3}>\n                  {/* <TextField                    \n                    label=\"amount\"\n                    onChange={handeleAmount}\n                    value={amount}  \n                    type=\"number\"            \n                    placeholder=\"Spent Amount ($)\"\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  /> */}\n                  <FormField\n                      {...props}                          \n                      name=\"amount\"\n                      placeholder=\"Spent amount $\"\n                      label=\"amount\"\n                  />\n                </Box>\n                \n                <Box mb={3}>\n                  {/* <TextField\n                    label=\"Catagory\"\n                    onChange={handeleCatagorie}\n                    value={catagorie}\n                    placeholder=\"Catagory\"\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  /> */}\n                  <FormField\n                      {...props}                          \n                      name=\"catagorie\"\n                      placeholder=\"Catagory\"\n                      label=\"catagorie\"\n                  />\n            \n                </Box>\n                <Button color=\"primary\" type=\"submit\">Create Entry</Button>\n                </Box>  \n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n      <Box>\n        <Route  path={`/e/:userId/:date`} >\n          <EntriesItems\n            {...{userId}}\n            getEntries={getEntries}\n            updateEntry={updateEntry}\n            {...{deleteEntry}}\n            {...{ entries }}\n            {...{ isLoading }}\n          />\n        </Route>\n      </Box>\n    </Box>\n  )\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.userReducer.data,\n    entries: state.entriesReducer.items,\n    isLoading: state.entriesReducer.isLoading,\n  }\n}\n\nconst mapDispatchToState = {\n  createEntry,\n  getEntries,\n  updateEntry,\n  deleteEntry\n}\n\nexport default connect(mapStateToProps, mapDispatchToState)(Entries)\n"]},"metadata":{},"sourceType":"module"}