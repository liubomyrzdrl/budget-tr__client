{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/MainContent.tsx\";\nimport React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport Entries from \"./Entries/Entries\";\nimport { ApiAuth } from '../api';\nimport { connect } from \"react-redux\";\nimport { createEntry } from '../modules/entries/entriesOperation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MainContent = ({\n  user,\n  isError,\n  idLoadingUser\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mb: 5,\n    children: ApiAuth.isLoggedIn() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: idLoadingUser ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Entries, {\n        user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 12\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Not Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MainContent;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.userReducer.user,\n    entries: state.entriesReducer.items,\n    isLoadingEntries: state.entriesReducer.isLoading,\n    idLoadingUser: state.userReducer.isLoading\n  };\n};\n\nconst mapDispatchToState = {\n  createEntry // getEntries,\n  // updateEntry,\n  // deleteEntry,\n\n};\nexport default connect(mapStateToProps, mapDispatchToState)(MainContent);\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/MainContent.tsx"],"names":["React","Box","Entries","ApiAuth","connect","createEntry","MainContent","user","isError","idLoadingUser","isLoggedIn","mapStateToProps","state","userReducer","entries","entriesReducer","items","isLoadingEntries","isLoading","mapDispatchToState"],"mappings":";AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAAUC,OAAV,QAAyB,QAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,qCAA5B;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAAsC;AAExD,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA,cACIN,OAAO,CAACO,UAAR,kBACA;AAAA,gBACCD,aAAa,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU,gBAEX,QAAC,OAAD;AAAeF,QAAAA;AAAf;AAAA;AAAA;AAAA;AAAA;AAHH,qBADA,gBAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAjBD;;KAAMD,W;;AAmBN,MAAMK,eAAe,GAAIC,KAAD,IAA0B;AAChD,SAAO;AACLL,IAAAA,IAAI,EAAEK,KAAK,CAACC,WAAN,CAAkBN,IADnB;AAELO,IAAAA,OAAO,EAAEF,KAAK,CAACG,cAAN,CAAqBC,KAFzB;AAGLC,IAAAA,gBAAgB,EAAEL,KAAK,CAACG,cAAN,CAAqBG,SAHlC;AAILT,IAAAA,aAAa,EAAEG,KAAK,CAACC,WAAN,CAAkBK;AAJ5B,GAAP;AAMD,CAPD;;AASA,MAAMC,kBAAkB,GAAG;AACzBd,EAAAA,WADyB,CAEzB;AACA;AACA;;AAJyB,CAA3B;AAOA,eAAeD,OAAO,CAACO,eAAD,EAAkBQ,kBAAlB,CAAP,CAA8Cb,WAA9C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport Entries from \"./Entries/Entries\";\nimport { useHistory } from \"react-router-dom\";\nimport {  ApiAuth } from '../api'\nimport { connect } from \"react-redux\";\nimport { createEntry } from '../modules/entries/entriesOperation'\n\nconst MainContent = ({ user, isError, idLoadingUser }) => {\n\n  return (\n    <Box mb={5}>\n      { ApiAuth.isLoggedIn() ? (\n        <>\n        {idLoadingUser ? (\n            <h1>Loading</h1>\n        ): <Entries {...{ user }} />}\n        </>\n      ) : (\n        <div>Not Login</div>\n\n      )}\n     \n    </Box>\n  );\n};\n\nconst mapStateToProps = (state: MainStateType) => {\n  return {\n    user: state.userReducer.user,\n    entries: state.entriesReducer.items,\n    isLoadingEntries: state.entriesReducer.isLoading,\n    idLoadingUser: state.userReducer.isLoading\n  };\n};\n\nconst mapDispatchToState = {\n  createEntry,\n  // getEntries,\n  // updateEntry,\n  // deleteEntry,\n};\n\nexport default connect(mapStateToProps, mapDispatchToState) (MainContent);\n"]},"metadata":{},"sourceType":"module"}