{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { login } from \"../modules/auth/authOperations\";\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nconst Login = ({\n  login\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const classes = useStyles();\n\n  function handleEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      border: \"1px solid\",\n      bgcolor: \"red\",\n      height: 300,\n      width: 400,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        onSubmit: async (values, actions) => {\n          // alert(JSON.stringify(values, null, 2));\n          try {\n            await login({\n              email,\n              password\n            });\n            setEmail(\"\");\n            setPassword(\"\");\n          } catch (error) {\n            console.log(\"Error\", error);\n          }\n\n          history.push(\"/\");\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"email\",\n                onChange: handleEmail,\n                value: email,\n                className: classes.textField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"password\",\n                onChange: handlePassword,\n                value: password,\n                className: classes.textField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 4,\n              mb: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/register\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"L8xZhpzuXVuq8w5T38vmrFvul7M=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = Login;\nconst mapDispatchToProps = {\n  login\n};\nexport default connect(null, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Login.tsx"],"names":["React","useState","Formik","Form","Box","Button","TextField","makeStyles","login","connect","useHistory","Link","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","Login","email","setEmail","password","setPassword","history","classes","handleEmail","e","target","value","handlePassword","values","actions","error","console","log","push","props","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, FormikHelpers } from \"formik\";\nimport FormField from \"../components/Form/FromField\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { login } from \"../modules/auth/authOperations\";\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\ntype AddBankFormType = {\n  handleSubmit: (values: any, actions: FormikHelpers<any>) => any;\n  setIsAddBank: (isOk: boolean) => void;\n  login: any;\n};\n\nconst Login: React.FC<AddBankFormType> = ({ login }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const classes = useStyles();\n\n  function handleEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n  return (\n    <Box\n    display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\"\n    height=\"100vh\"\n    >\n     \n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\" \n        flexDirection=\"column\"      \n        border=\"1px solid\"\n        bgcolor=\"red\"\n        height={300}\n        width={400}\n    \n      >\n           <Box>\n          <h1>Login</h1>\n      </Box>\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\",\n          }}\n          onSubmit={async (values, actions) => {\n            // alert(JSON.stringify(values, null, 2));\n            try {\n              await login({\n                email,\n                password,\n              });\n              setEmail(\"\");\n              setPassword(\"\");\n            } catch (error) {\n              console.log(\"Error\", error);\n            }\n\n            history.push(\"/\");\n          }}\n        >\n          {(props) => (\n            <Form>\n                <Box textAlign=\"center\">\n\n                \n              <Box>\n                {/* <FormField\n                                {...props}\n                                name=\"email\"\n                                placeholder=\"email\"\n                                label=\"email\"\n                            /> */}\n                <TextField\n                  label=\"email\"\n                  onChange={handleEmail}\n                  value={email}\n                  className={classes.textField}\n                />\n              </Box>\n              <Box>\n                {/* <FormField\n                  {...props}\n                  name=\"password\"\n                  placeholder=\"password\"\n                  label=\"password\"\n                /> */}\n                <TextField\n                  label=\"password\"\n                  onChange={handlePassword}\n                  value={password}\n                  className={classes.textField}\n                />\n              </Box>\n              <Box mt={4} mb={2}>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                  Login\n                </Button>                \n              </Box>\n              <Box >\n                <Link to=\"/register\">Register</Link>\n              </Box>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Box>\n  );\n};\nconst mapDispatchToProps = {\n  login,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}