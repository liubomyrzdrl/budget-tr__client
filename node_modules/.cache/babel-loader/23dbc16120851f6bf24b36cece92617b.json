{"ast":null,"code":"import { handleActions } from 'redux-actions';\nimport { getUserStart, getUserSuccess, getUserError } from './userActions';\nconst INITIAL_STATE = {\n  isLoading: false,\n  isSuccess: false,\n  isError: false,\n  error: null,\n  user: {\n    data: null\n  }\n}; // const INITIAL_STATE = {\n//   fetchUser: {\n//     isLoading: false,\n//     isError: false,\n//     error: null,\n//   },\n//   data: {\n//     data: null\n//   },\n// };\n\nexport default handleActions({\n  [getUserStart.toString()]: state => {\n    console.log('STATE', state);\n    return { ...state,\n      isLoading: true,\n      isError: false\n    };\n  },\n  [getUserSuccess.toString()]: (state, action) => {\n    console.log(\"REDUCER\", action.payload);\n    return { ...state,\n      isLoading: false,\n      isError: false,\n      data: action.payload.user\n    };\n  },\n  [getUserError.toString()]: state => ({ ...state,\n    isLoading: false,\n    isError: true\n  })\n}, INITIAL_STATE);","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/modules/user/userReducer.ts"],"names":["handleActions","getUserStart","getUserSuccess","getUserError","INITIAL_STATE","isLoading","isSuccess","isError","error","user","data","toString","state","console","log","action","payload"],"mappings":"AAAA,SAASA,aAAT,QAA8C,eAA9C;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,YAAvC,QAAkF,eAAlF;AAeA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,SAAS,EAAE,KADO;AAElBC,EAAAA,SAAS,EAAE,KAFO;AAGlBC,EAAAA,OAAO,EAAE,KAHS;AAIlBC,EAAAA,KAAK,EAAE,IAJW;AAKlBC,EAAAA,IAAI,EAAE;AACLC,IAAAA,IAAI,EAAE;AADD;AALY,CAAtB,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeV,aAAa,CAAwC;AAChE,GAACC,YAAY,CAACU,QAAb,EAAD,GAA4BC,KAAD,IAAW;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACA,WAAO,EACL,GAAGA,KADE;AAEHP,MAAAA,SAAS,EAAE,IAFR;AAGHE,MAAAA,OAAO,EAAE;AAHN,KAAP;AAMD,GAT+D;AAWhE,GAACL,cAAc,CAACS,QAAf,EAAD,GAA6B,CAACC,KAAD,EAAQG,MAAR,KAAmB;AAC9CF,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,MAAM,CAACC,OAA9B;AACC,WAAO,EACL,GAAGJ,KADE;AAENP,MAAAA,SAAS,EAAE,KAFL;AAGNE,MAAAA,OAAO,EAAE,KAHH;AAING,MAAAA,IAAI,EAAEK,MAAM,CAACC,OAAP,CAAeP;AAJf,KAAP;AAMF,GAnB+D;AAqBhE,GAACN,YAAY,CAACQ,QAAb,EAAD,GAA4BC,KAAD,KAAY,EACnC,GAAGA,KADgC;AAEnCP,IAAAA,SAAS,EAAE,KAFwB;AAGnCE,IAAAA,OAAO,EAAE;AAH0B,GAAZ;AArBqC,CAAxC,EA2B1BH,aA3B0B,CAA5B","sourcesContent":["import { handleActions, combineActions } from 'redux-actions';\nimport { getUserStart, getUserSuccess, getUserError, GetUserSuccessPayload } from './userActions';\nimport { loginSuccess, registerSuccess } from '../auth/authActions';\nimport * as appActions from '../app/appActions';\nimport { authActions } from '../auth';\nimport { UserType } from '../../types';\n\n\nexport interface UserStateType {\n  isLoading: boolean\n  isSuccess?: boolean\n  isError?: boolean | null\n  error?: boolean | null\n  user: UserType | null\n}\n\nconst INITIAL_STATE = {\n    isLoading: false,\n    isSuccess: false,\n    isError: false,\n    error: null,\n    user: {\n     data: null\n  },\n};\n// const INITIAL_STATE = {\n//   fetchUser: {\n//     isLoading: false,\n//     isError: false,\n//     error: null,\n//   },\n//   data: {\n//     data: null\n//   },\n// };\n\nexport default handleActions<UserStateType | GetUserSuccessPayload>({\n    [getUserStart.toString()]: (state) => {\n      console.log('STATE', state);\n      return {\n        ...state,            \n          isLoading: true,\n          isError: false,\n     \n      };\n    },\n\n    [getUserSuccess.toString()]: (state, action) => {\n      console.log(\"REDUCER\", action.payload)\n       return { \n         ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload.user,\n      }\n    },\n\n    [getUserError.toString()]: (state) => ({\n        ...state,       \n        isLoading: false,\n        isError: true,    \n    }),\n  },\n  INITIAL_STATE,\n);\n"]},"metadata":{},"sourceType":"module"}