{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/Entries.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { createEntry, getEntries } from \"../../modules/entries/entriesOperation\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport EntriesItems from \"./EntriesList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n})); // interface BanksListPropsType {\n//   get: any;\n//   isLoading: boolean;\n//   banks: Array<BankType>;\n//   createBank:(bank: BankType) => Promise<boolean>;\n//   updateBank: (bank: BankType) => Promise<boolean>;\n//   deleteBank: (_id: string) => Promise<boolean>;\n// }\n\nconst Entries = ({\n  user,\n  createEntry,\n  getEntries,\n  entries,\n  isLoading\n}) => {\n  _s();\n\n  const [date, setDate] = useState(\"2021-04-21\");\n  const [amount, setAmount] = useState(\"\");\n  const [catagorie, setCatagorie] = useState(\"\");\n  const classes = useStyles();\n  const history = useHistory(); // useEffect(() => {\n  //   createEntry();\n  // }, [createEntry]);\n  // if (isLoading) {\n  //   return <div>Loading ...</div>;\n  // }\n  //  <Link to={`/entry/userId:${user.id}&date:${date}`}> </Link>\n\n  useEffect(() => {\n    history.push(`/e/${user.id}/${date}`);\n  }, [date, history, user.id]);\n\n  function handeleDate(e) {\n    console.log(e.target.value);\n    setDate(e.target.value);\n  }\n\n  function handeleAmount(e) {\n    console.log(e.target.value);\n    setAmount(e.target.value);\n  }\n\n  function handeleCatagorie(e) {\n    console.log(e.target.value);\n    setAmount(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          catagorie: \"\",\n          amount: \"\"\n        },\n        onSubmit: async (values, actions) => {\n          try {\n            await createEntry({\n              amount: values.amount,\n              catagorie: values.catagorie,\n              userId: user.id,\n              date\n            });\n            setAmount(\"\");\n            setCatagorie(\"\");\n          } catch (error) {\n            console.log(\"Error\", error);\n          }\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mr: 15,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"date\",\n                label: \"Trecker\",\n                onChange: handeleDate,\n                value: date,\n                type: \"date\",\n                className: classes.textField,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"amount\",\n                  onChange: handeleAmount,\n                  value: amount,\n                  type: \"number\",\n                  placeholder: \"Spent Amount ($)\",\n                  className: classes.textField,\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Catagory\",\n                  onChange: handeleCatagorie,\n                  value: catagorie,\n                  type: \"text\",\n                  placeholder: \"Catagory\",\n                  className: classes.textField,\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                children: \"Create Entry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: `/e/:userId/:date`,\n        children: /*#__PURE__*/_jsxDEV(EntriesItems, {\n          getEntries: getEntries,\n          entries,\n          isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Entries, \"q/t3sbUsChwgFrk4hjxTEhgIVIs=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Entries;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.userReducer.data,\n    entries: state.entriesReducer.items,\n    isLoading: state.entriesReducer.isLoading\n  };\n};\n\nconst mapDispatchToState = {\n  createEntry,\n  getEntries\n};\nexport default connect(mapStateToProps, mapDispatchToState)(Entries);\n\nvar _c;\n\n$RefreshReg$(_c, \"Entries\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/Entries.tsx"],"names":["React","useEffect","useState","Box","Button","TextField","makeStyles","connect","Formik","Form","createEntry","getEntries","Route","useHistory","EntriesItems","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","Entries","user","entries","isLoading","date","setDate","amount","setAmount","catagorie","setCatagorie","classes","history","push","id","handeleDate","e","console","log","target","value","handeleAmount","handeleCatagorie","values","actions","userId","error","props","shrink","mapStateToProps","state","userReducer","data","entriesReducer","items","mapDispatchToState"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport {\n  createEntry,\n  getEntries,\n} from \"../../modules/entries/entriesOperation\";\nimport FormField from \"../Form/FromField\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport EntriesItems from \"./EntriesList\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\n// interface BanksListPropsType {\n//   get: any;\n//   isLoading: boolean;\n//   banks: Array<BankType>;\n//   createBank:(bank: BankType) => Promise<boolean>;\n//   updateBank: (bank: BankType) => Promise<boolean>;\n//   deleteBank: (_id: string) => Promise<boolean>;\n// }\n\nconst Entries: React.FC<{}> = ({\n  user,\n  createEntry,\n  getEntries,\n  entries,\n  isLoading,\n}) => {\n  const [date, setDate] = useState(\"2021-04-21\");\n  const [amount, setAmount] = useState(\"\");\n  const [catagorie, setCatagorie] = useState(\"\");\n  const classes = useStyles();\n  const history = useHistory();\n\n  // useEffect(() => {\n  //   createEntry();\n  // }, [createEntry]);\n\n  // if (isLoading) {\n  //   return <div>Loading ...</div>;\n  // }\n  //  <Link to={`/entry/userId:${user.id}&date:${date}`}> </Link>\n  useEffect(() => {\n    history.push(`/e/${user.id}/${date}`);\n  }, [date, history, user.id]);\n\n  function handeleDate(e) {\n    console.log(e.target.value);\n    setDate(e.target.value);\n  }\n  function handeleAmount(e) {\n    console.log(e.target.value);\n    setAmount(e.target.value);\n  }\n  function handeleCatagorie(e) {\n    console.log(e.target.value);\n    setAmount(e.target.value);\n  }\n\n  return (\n    <Box>\n      <Box>\n        <Formik\n          initialValues={{\n            catagorie: \"\",\n            amount: \"\",\n          }}\n          onSubmit={async (values, actions) => {\n            try {\n              await createEntry({\n                amount: values.amount,\n                catagorie: values.catagorie,\n                userId: user.id,\n                date,\n              });\n              setAmount(\"\");\n              setCatagorie(\"\");\n            } catch (error) {\n              console.log(\"Error\", error);\n            }\n          }}\n        >\n          {(props) => (\n            <Form>\n              <Box display=\"flex\">\n                <Box mr={15}>\n                  <TextField\n                    id=\"date\"\n                    label=\"Trecker\"\n                    onChange={handeleDate}\n                    value={date}\n                    type=\"date\"\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Box>\n                <Box>  \n                <Box>\n                  <TextField\n                    label=\"amount\"\n                    onChange={handeleAmount}\n                    value={amount}\n                    type=\"number\"\n                    placeholder=\"Spent Amount ($)\"\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                  {/* <FormField\n                                {...props}\n                          \n                                name=\"amount\"\n                                placeholder=\"Spent amount $\"\n                                label=\"amount\"\n                            /> */}\n                </Box>\n                <Box>\n                  <TextField\n                    label=\"Catagory\"\n                    onChange={handeleCatagorie}\n                    value={catagorie}\n                    type=\"text\"\n                    placeholder=\"Catagory\"\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                  {/* <FormField\n                                {...props}\n                                name=\"catagorie\"\n                                placeholder=\"Catagory\"\n                                label=\"catagorie\"\n                            /> */}\n                </Box>\n                <Button type=\"submit\">Create Entry</Button>\n                </Box>  \n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n      <Box>\n        <Route path={`/e/:userId/:date`}>\n          <EntriesItems\n            getEntries={getEntries}\n            {...{ entries }}\n            {...{ isLoading }}\n          />\n        </Route>\n      </Box>\n    </Box>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    user: state.userReducer.data,\n    entries: state.entriesReducer.items,\n    isLoading: state.entriesReducer.isLoading,\n  };\n};\n\nconst mapDispatchToState = {\n  createEntry,\n  getEntries,\n};\n\nexport default connect(mapStateToProps, mapDispatchToState)(Entries);\n"]},"metadata":{},"sourceType":"module"}