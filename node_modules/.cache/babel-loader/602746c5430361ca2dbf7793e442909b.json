{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../modules/auth/authOperations\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport AuthHeader from \"./AuthHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nconst Register = ({\n  register,\n  isLoading,\n  isError,\n  error\n}) => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorRgister, setErrorRegister] = useState(error);\n  const history = useHistory();\n  const classes = useStyles();\n  useEffect(() => {\n    if (isError) {\n      setErrorRegister(error);\n    }\n  }, [error, history, isError]);\n\n  function handleUsername(e) {\n    setUsername(e.target.value);\n  }\n\n  function handleEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    children: [/*#__PURE__*/_jsxDEV(AuthHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      width: 400,\n      height: 400,\n      border: \"1px solid\",\n      flexDirection: \"column\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: \"\",\n          email: \"\",\n          password: \"\"\n        },\n        onSubmit: async (values, actions) => {\n          try {\n            await register({\n              username,\n              email,\n              password\n            });\n            history.push(\"/\");\n          } catch (error) {\n            console.log(\"error\", error);\n          }\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"username\",\n                onChange: handleUsername,\n                value: username,\n                className: classes.textField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"email\",\n                onChange: handleEmail,\n                value: email,\n                className: classes.textField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"password\",\n                onChange: handlePassword,\n                value: password,\n                className: classes.textField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 4,\n              mb: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                disabled: username === '' || email === '' || password === '',\n                children: isLoading ? \"Loading ...\" : \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"fxFtwXBhcL9xtVh9HU+eDMlOkRw=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = Register;\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.authReducer.register.isLoading,\n    isError: state.authReducer.register.isError,\n    error: state.authReducer.register.error\n  };\n};\n\nconst mapDispatchToProps = {\n  register\n}; //export default  Register\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Register.tsx"],"names":["React","useState","useEffect","Box","Button","TextField","makeStyles","Formik","Form","connect","register","useHistory","Link","AuthHeader","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","Register","isLoading","isError","error","username","setUsername","email","setEmail","password","setPassword","errorRgister","setErrorRegister","history","classes","handleUsername","e","target","value","handleEmail","handlePassword","values","actions","push","console","log","props","mapStateToProps","state","authReducer","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\n\nimport { Formik, Form, FormikHelpers } from \"formik\";\nimport FormField from \"../components/Form/FromField\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../modules/auth/authOperations\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { MainStateType } from \"../store/createState\";\nimport AuthHeader from \"./AuthHeader\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}))\n\ntype SendRegisterType = {\n  username: string\n  email: string \n  password: string\n}\n\ntype AuthRegisterType = {\n  handleSubmit: (values: any, actions: FormikHelpers<any>) => any\n  setIsAddBank: (isOk: boolean) => void\n  register: (body: SendRegisterType) => any\n  isLoading: boolean\n  isError: boolean\n  error: string\n};\n\nconst Register: React.FC<AuthRegisterType> = ({ register, isLoading, isError, error }) => {\n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\")\n\n  const [errorRgister, setErrorRegister] = useState(error);\n  const history = useHistory()\n  const classes = useStyles()\n\n  useEffect(() => {\n    if (isError) {\n      setErrorRegister(error)\n    }     \n  }, [error, history, isError]);\n  \n\n  function handleUsername(e: React.ChangeEvent<HTMLInputElement>) {\n    setUsername(e.target.value);\n  }\n\n  function handleEmail(e: React.ChangeEvent<HTMLInputElement>) {\n    setEmail(e.target.value);\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      height=\"100vh\"\n      \n    > \n      <AuthHeader />\n      <Box\n        width={400}\n        height={400}\n        border=\"1px solid\"\n        flexDirection=\"column\"\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Box>\n          <h1>Register</h1>\n        </Box>\n        <Formik\n          initialValues={{\n            username: \"\",\n            email: \"\",\n            password: \"\",\n          }}\n          onSubmit={async (values, actions) => {\n            try {\n              await register({\n                username,\n                email,\n                password,\n              })\n              history.push(\"/\")\n  \n            } catch (error) {\n              console.log(\"error\", error);\n            }\n          }}\n        >\n          {(props) => (\n            <Form>\n              <Box textAlign=\"center\">\n                <Box>\n                  <TextField\n                    label=\"username\"\n                    onChange={handleUsername}\n                    value={username}\n                    className={classes.textField}\n                  />\n                </Box>\n                <Box>\n                  <TextField\n                    label=\"email\"\n                    onChange={handleEmail}\n                    value={email}\n                    className={classes.textField}\n                  />\n                </Box>\n                <Box>\n                  <TextField\n                    label=\"password\"\n                    onChange={handlePassword}\n                    value={password}\n                    className={classes.textField}\n                  />\n                </Box>            \n                  <Box mt={4} mb={2}>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={username ==='' || email === '' || password === ''}>\n                    {isLoading ? \"Loading ...\"  :\"Register\" }\n                    </Button>\n                  </Box>\n                \n                <Box>\n                  <Link to=\"/login\">Login</Link>\n                </Box>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state: MainStateType) => {\n  return {\n    isLoading: state.authReducer.register.isLoading,\n    isError: state.authReducer.register.isError,\n    error: state.authReducer.register.error,\n  };\n};\n\nconst mapDispatchToProps = {\n  register,\n};\n\n//export default  Register\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}