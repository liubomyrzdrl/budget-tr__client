{"ast":null,"code":"import axios from 'axios';\nexport const ApiEntries = {\n  fetchEntries(userId, date) {\n    return axios.get(`https://budget-new.herokuapp.com/entries/get/?userId=${userId}&date=${date}`);\n  },\n\n  createEntry(entrie) {\n    return axios.post('https://budget-new.herokuapp.com/entries/create', entrie);\n  },\n\n  updateEntry(entrie) {\n    return axios.put(`https://budget-new.herokuapp.com/entries/update`, entrie);\n  },\n\n  deleteEntries(id) {\n    return axios.delete(`https://budget-new.herokuapp.com/entries/delete/?id=${id}`);\n  }\n\n};\nexport const ApiAuth = {\n  _token: null,\n\n  isLoggedIn() {\n    return !!this._token;\n  },\n\n  _storeTokenToAxios(token) {\n    console.log(\"_storeTokenToAxios\", token);\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`; // axios.defaults.headers.common.Authorization = `Bearer ${this._token}`\n  },\n\n  setToken(token) {\n    this._token = token;\n\n    this._storeTokenToAxios(token);\n  },\n\n  init() {\n    try {\n      const token = window.localStorage.getItem('token');\n      this.setToken(token);\n    } catch (error) {\n      console.log('NOT FOUND TOKEN');\n      console.log(error);\n    }\n\n    return this._token;\n  },\n\n  register(entrie) {\n    return axios.post(`https://budget-new.herokuapp.com/auth/register`, entrie);\n  },\n\n  login(entrie) {\n    return axios.post(`https://budget-new.herokuapp.com/auth/login`, entrie);\n  }\n\n};\nexport const ApiAccount = {\n  get() {\n    return axios.get('https://budget-new.herokuapp.com/account');\n  }\n\n};","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/api/index.ts"],"names":["axios","ApiEntries","fetchEntries","userId","date","get","createEntry","entrie","post","updateEntry","put","deleteEntries","id","delete","ApiAuth","_token","isLoggedIn","_storeTokenToAxios","token","console","log","defaults","headers","common","Authorization","setToken","init","window","localStorage","getItem","error","register","login","ApiAccount"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAuBA,OAAO,MAAMC,UAAU,GAAG;AACtBC,EAAAA,YAAY,CAACC,MAAD,EAAiBC,IAAjB,EAA4D;AACtE,WAAOJ,KAAK,CAACK,GAAN,CAAW,wDAAuDF,MAAO,SAAQC,IAAK,EAAtF,CAAP;AACD,GAHqB;;AAKtBE,EAAAA,WAAW,CAAEC,MAAF,EAA6C;AACtD,WAAOP,KAAK,CAACQ,IAAN,CAAW,iDAAX,EAA8DD,MAA9D,CAAP;AACD,GAPqB;;AAStBE,EAAAA,WAAW,CAAEF,MAAF,EAA6C;AACpD,WAAOP,KAAK,CAACU,GAAN,CAAW,iDAAX,EAA6DH,MAA7D,CAAP;AACH,GAXqB;;AAatBI,EAAAA,aAAa,CAACC,EAAD,EAA+B;AACxC,WAAOZ,KAAK,CAACa,MAAN,CAAc,uDAAsDD,EAAG,EAAvE,CAAP;AACH;;AAfqB,CAAnB;AAkBP,OAAO,MAAME,OAAO,GAAG;AACrBC,EAAAA,MAAM,EAAE,IADa;;AAErBC,EAAAA,UAAU,GAAG;AACX,WAAO,CAAC,CAAC,KAAKD,MAAd;AACD,GAJoB;;AAKrBE,EAAAA,kBAAkB,CAACC,KAAD,EAAmB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,KAAlC;AACAlB,IAAAA,KAAK,CAACqB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA+C,UAASN,KAAM,EAA9D,CAFmC,CAGnC;AACD,GAToB;;AAWrBO,EAAAA,QAAQ,CAACP,KAAD,EAAa;AACnB,SAAKH,MAAL,GAAcG,KAAd;;AACA,SAAKD,kBAAL,CAAwBC,KAAxB;AACD,GAdoB;;AAgBrBQ,EAAAA,IAAI,GAAG;AACH,QAAI;AACD,YAAMR,KAAK,GAAGS,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AACA,WAAKJ,QAAL,CAAcP,KAAd;AACF,KAHD,CAGE,OAAOY,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AAED;;AACD,WAAO,KAAKf,MAAZ;AACH,GA1BoB;;AA4BrBgB,EAAAA,QAAQ,CAACxB,MAAD,EAA2C;AACjD,WAAOP,KAAK,CAACQ,IAAN,CAAY,gDAAZ,EAA6DD,MAA7D,CAAP;AACD,GA9BoB;;AAgCrByB,EAAAA,KAAK,CAACzB,MAAD,EAA2C;AAC9C,WAAOP,KAAK,CAACQ,IAAN,CAAY,6CAAZ,EAA0DD,MAA1D,CAAP;AACD;;AAlCoB,CAAhB;AAqCP,OAAO,MAAM0B,UAAU,GAAG;AACxB5B,EAAAA,GAAG,GAAsB;AACvB,WAAOL,KAAK,CAACK,GAAN,CAAU,0CAAV,CAAP;AACD;;AAHuB,CAAnB","sourcesContent":["import axios from 'axios'\nimport { EntrieType, UserType } from \"../types\"\n\n\ntype TokenType = string\ntype AuthDataType = {\n    data: Array<UserType>\n    token: string\n}\ntype AuthEntrieDataType = {\n    data: Array<EntrieType>\n    token: string\n}\n\ntype ApiAuthType = {\n   data: AuthDataType\n  [propName: string]: any\n}\ntype ApiEntryType = {\n   data: EntrieType\n  [propName: string]: any\n}\n\nexport const ApiEntries = {    \n    fetchEntries(userId: number, date: string): Promise<AuthEntrieDataType> {\n      return axios.get(`https://budget-new.herokuapp.com/entries/get/?userId=${userId}&date=${date}`)\n    },\n\n    createEntry( entrie: EntrieType): Promise<ApiEntryType> {\n      return axios.post('https://budget-new.herokuapp.com/entries/create', entrie)\n    },\n\n    updateEntry( entrie: EntrieType): Promise<ApiEntryType> {\n        return axios.put(`https://budget-new.herokuapp.com/entries/update`, entrie)\n    },\n\n    deleteEntries(id: number): Promise<boolean> {\n        return axios.delete(`https://budget-new.herokuapp.com/entries/delete/?id=${id}`)\n    }\n}\n\nexport const ApiAuth = {\n  _token: null,\n  isLoggedIn() {\n    return !!this._token;\n  },\n  _storeTokenToAxios(token: TokenType) {\n    console.log(\"_storeTokenToAxios\", token)\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`\n    // axios.defaults.headers.common.Authorization = `Bearer ${this._token}`\n  },\n\n  setToken(token: any) {\n    this._token = token\n    this._storeTokenToAxios(token)\n  },\n\n  init() {\n      try {\n         const token = window.localStorage.getItem('token')\n         this.setToken(token)\n      } catch (error) {\n        console.log('NOT FOUND TOKEN');\n        console.log(error);\n\n      }  \n      return this._token\n  },\n\n  register(entrie: EntrieType): Promise<ApiAuthType> {\n    return axios.post(`https://budget-new.herokuapp.com/auth/register`, entrie )\n  },\n\n  login(entrie: EntrieType): Promise<ApiAuthType> {\n    return axios.post(`https://budget-new.herokuapp.com/auth/login`, entrie)\n  },\n}\n\nexport const ApiAccount = {\n  get(): Promise<UserType> {\n    return axios.get('https://budget-new.herokuapp.com/account')\n  },\n}"]},"metadata":{},"sourceType":"module"}