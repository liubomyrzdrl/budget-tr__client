{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport red from \"@material-ui/core/colors/red\";\nimport { login } from \"../modules/auth/authOperations\";\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport green from \"@material-ui/core/colors/green\";\nimport AuthHeader from \"./AuthHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nconst Login = ({\n  login,\n  isLoading,\n  isError,\n  error\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorLogin, setErrorLogin] = useState(error);\n  const history = useHistory();\n  const classes = useStyles();\n  useEffect(() => {\n    if (isError) {\n      console.log(\"Is ERROR\", error);\n      setErrorLogin(error);\n    }\n  }, [error, isError]);\n\n  function handleEmail(e) {\n    setErrorLogin(\"\");\n    setEmail(e.target.value);\n  }\n\n  function handlePassword(e) {\n    setErrorLogin(\"\");\n    setPassword(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      border: \"1px solid\",\n      height: 400,\n      width: 400,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        position: \"absolute\",\n        top: \"0\",\n        height: 100,\n        width: \"100%\",\n        bgcolor: green[200],\n        display: \"flex\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(AuthHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        onSubmit: async (values, actions) => {\n          try {\n            const res = await login({\n              email,\n              password\n            });\n            console.log(\"RES server\", res);\n\n            if (isError) {\n              setEmail(\"\");\n              setPassword(\"\");\n            }\n          } catch (error) {\n            console.log(\"Error Login\", error);\n          }\n\n          if (isError) {// history.push(\"/\");\n          }\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"email\",\n                onChange: handleEmail,\n                value: email,\n                className: classes.textField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"password\",\n                onChange: handlePassword,\n                value: password,\n                className: classes.textField\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), true && /*#__PURE__*/_jsxDEV(Box, {\n              color: red[200],\n              mt: 1,\n              children: errorLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 4,\n              mb: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                disabled: email === \"\" || password === \"\",\n                children: isLoading ? \"Loading ...\" : \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/register\",\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"kaILS0DORUJkHznJORLVnamtfcU=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = Login;\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.authReducer.login.isLoading,\n    isError: state.authReducer.login.isError,\n    error: state.authReducer.login.error\n  };\n};\n\nconst mapDispatchToProps = {\n  login\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Login.tsx"],"names":["React","useState","useEffect","Formik","Form","Box","Button","TextField","makeStyles","red","login","connect","useHistory","Link","green","AuthHeader","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","Login","isLoading","isError","error","email","setEmail","password","setPassword","errorLogin","setErrorLogin","history","classes","console","log","handleEmail","e","target","value","handlePassword","values","actions","res","props","mapStateToProps","state","authReducer","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Formik, Form, FormikHelpers } from \"formik\";\nimport FormField from \"../components/Form/FromField\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport red from \"@material-ui/core/colors/red\";\nimport { login } from \"../modules/auth/authOperations\";\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport green from \"@material-ui/core/colors/green\";\nimport { MainStateType } from \"../store/createState\";\nimport AuthHeader from \"./AuthHeader\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\ntype AuthType = {\n  handleSubmit: (values: any, actions: FormikHelpers<any>) => any\n  setIsAddBank: (isOk: boolean) => void\n  login: any\n  isLoading: boolean\n  isError: boolean\n  error: string\n};\n\nconst Login: React.FC<AuthType> = ({ login, isLoading, isError, error }) => {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [errorLogin, setErrorLogin] = useState(error)\n  const history = useHistory()\n  const classes = useStyles()\n\n\n\n  useEffect(() => {\n    if(isError) {\n      console.log(\"Is ERROR\", error)\n    setErrorLogin(error)\n  }\n    \n\n  },[error, isError])\n\n  function handleEmail(e: React.ChangeEvent<HTMLInputElement>) {\n    setErrorLogin(\"\")\n    setEmail(e.target.value)\n  }\n\n  function handlePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    setErrorLogin(\"\")\n    setPassword(e.target.value);\n  }\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      height=\"100vh\"\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n        border=\"1px solid\"\n        height={400}\n        width={400}\n      >\n        <Box\n          position=\"absolute\"\n          top=\"0\"\n          height={100}\n          width={\"100%\"}\n          bgcolor={green[200]}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n        <AuthHeader />\n        </Box>\n        <Box>\n          <h1>Login</h1>\n        </Box>\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\",\n          }}\n          onSubmit={async (values, actions) => {\n            try {\n              const res = await login({\n                email,\n                password,\n              });\n              console.log(\"RES server\", res);\n      \n              if (isError) {\n                setEmail(\"\");\n                setPassword(\"\");\n              }\n              \n            } catch (error) {\n              console.log(\"Error Login\", error);\n            }\n            if(isError) {\n              // history.push(\"/\");\n            }\n          }}\n        >\n          {(props) => (\n            <Form>\n              <Box textAlign=\"center\">\n                <Box>\n                  <TextField\n                    label=\"email\"\n                    onChange={handleEmail}\n                    value={email}\n                    className={classes.textField}\n                  />\n                </Box>\n                <Box>\n                  <TextField\n                    label=\"password\"\n                    onChange={handlePassword}\n                    value={password}\n                    className={classes.textField}\n                  />\n                </Box>\n                {true && (\n                  <Box color={red[200]} mt={1}>\n                    { errorLogin }\n                  </Box>\n                )}\n\n                <Box mt={4} mb={2}>\n                  <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={email === \"\" || password === \"\"}\n                  >\n                    {isLoading ? \"Loading ...\" : \"Login\"}\n                  </Button>\n                </Box>\n                <Box>\n                  <Link to=\"/register\">Register</Link>\n                </Box>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoading: state.authReducer.login.isLoading,\n    isError: state.authReducer.login.isError,\n    error: state.authReducer.login.error,\n\n  };\n};\nconst mapDispatchToProps = {\n  login,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}