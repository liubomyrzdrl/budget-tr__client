{"ast":null,"code":"import { handleActions } from 'redux-actions';\nimport { initStart, initSuccess, initError } from './appActions';\nconst INITIAL_STATE = {\n  isLoading: false,\n  isError: false,\n  error: null\n};\nexport default handleActions({\n  [initStart.toString()]: state => {\n    return { ...state,\n      isLoading: true,\n      isError: false,\n      error: null\n    };\n  },\n  [initSuccess.toString()]: state => ({ ...state,\n    isLoading: false,\n    isError: false\n  }),\n  [initError.toString()]: state => ({ ...state,\n    isLoading: false,\n    isError: true,\n    error: true\n  })\n}, INITIAL_STATE);","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/modules/app/appReducer.ts"],"names":["handleActions","initStart","initSuccess","initError","INITIAL_STATE","isLoading","isError","error","toString","state"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,cAAlD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,KADS;AAEpBC,EAAAA,OAAO,EAAE,KAFW;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;AAMA,eAAeP,aAAa,CAC1B;AACE,GAACC,SAAS,CAACO,QAAV,EAAD,GAAyBC,KAAD,IAAW;AACjC,WAAO,EACL,GAAGA,KADE;AAELJ,MAAAA,SAAS,EAAE,IAFN;AAGLC,MAAAA,OAAO,EAAE,KAHJ;AAILC,MAAAA,KAAK,EAAE;AAJF,KAAP;AAMD,GARH;AAUE,GAACL,WAAW,CAACM,QAAZ,EAAD,GAA2BC,KAAD,KAAY,EACpC,GAAGA,KADiC;AAEpCJ,IAAAA,SAAS,EAAE,KAFyB;AAGpCC,IAAAA,OAAO,EAAE;AAH2B,GAAZ,CAV5B;AAgBE,GAACH,SAAS,CAACK,QAAV,EAAD,GAAyBC,KAAD,KAAY,EAClC,GAAGA,KAD+B;AAElCJ,IAAAA,SAAS,EAAE,KAFuB;AAGlCC,IAAAA,OAAO,EAAE,IAHyB;AAIlCC,IAAAA,KAAK,EAAE;AAJ2B,GAAZ;AAhB1B,CAD0B,EAwB1BH,aAxB0B,CAA5B","sourcesContent":["import { handleActions } from 'redux-actions';\nimport { initStart, initSuccess, initError } from './appActions';\n\nconst INITIAL_STATE = {\n  isLoading: false,\n  isError: false,\n  error: null,\n};\n\nexport default handleActions(\n  {\n    [initStart.toString()]: (state) => {\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n        error: null,\n      };\n    },\n\n    [initSuccess.toString()]: (state) => ({\n      ...state,\n      isLoading: false,\n      isError: false,\n    }),\n\n    [initError.toString()]: (state) => ({\n      ...state,\n      isLoading: false,\n      isError: true,\n      error: true,\n    }),\n  },\n  INITIAL_STATE,\n);\n"]},"metadata":{},"sourceType":"module"}