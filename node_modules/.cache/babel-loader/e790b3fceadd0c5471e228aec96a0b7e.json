{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Register.tsx\";\nimport React from 'react';\nimport { Box, Button } from '@material-ui/core';\nimport { Formik, Form } from \"formik\";\nimport FormField from '../components/Form/FromField';\nimport { register } from '../modules/auth/authOperations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//   { register, isLoading }\nconst Register = () => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: 500,\n      height: 400,\n      bgcolor: \"green\",\n      borderRadius: \"30px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: \"\",\n          email: \"\",\n          password: \"\"\n        },\n        onSubmit: async (values, actions) => {\n          const res = await register(values);\n          console.log('REsult', res);\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(FormField, { ...props,\n              name: \"username\",\n              placeholder: \"username\",\n              label: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(FormField, { ...props,\n              name: \"email\",\n              placeholder: \"email\",\n              label: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(FormField, { ...props,\n              name: \"password\",\n              placeholder: \"password\",\n              label: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Register;\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.authReducer.isLoading\n  };\n};\n\nconst mapDispatchToProps = {\n  register\n};\nexport default Register; // export default  connect (mapStateToProps, mapDispatchToProps)(Register) \n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Register.tsx"],"names":["React","Box","Button","Formik","Form","FormField","register","Register","username","email","password","values","actions","res","console","log","props","mapStateToProps","state","isLoading","authReducer","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,mBAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA4C,QAA5C;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AAEA,SAASC,QAAT,QAAyB,gCAAzB;;;AASA;AACA,MAAMC,QAAmC,GAAI,MAAM;AAC/C,sBACI,QAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,cAAc,EAAC,QAAnC;AAA4C,IAAA,UAAU,EAAC,QAAvD;AAAgE,IAAA,MAAM,EAAC,OAAvE;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE,GAAZ;AAAiB,MAAA,MAAM,EAAE,GAAzB;AAAgC,MAAA,OAAO,EAAC,OAAxC;AAAgD,MAAA,YAAY,EAAC,MAA7D;AAAoE,MAAA,OAAO,EAAC,MAA5E;AAAoF,MAAA,cAAc,EAAC,QAAnG;AAA4G,MAAA,UAAU,EAAC,QAAvH;AAAA,6BACA,QAAC,MAAD;AACI,QAAA,aAAa,EAAE;AACPC,UAAAA,QAAQ,EAAE,EADH;AAEPC,UAAAA,KAAK,EAAE,EAFA;AAGPC,UAAAA,QAAQ,EAAE;AAHH,SADnB;AAMI,QAAA,QAAQ,EAAE,OAAOC,MAAP,EAAeC,OAAf,KAA2B;AACjC,gBAAMC,GAAG,GAAG,MAAMP,QAAQ,CAACK,MAAD,CAA1B;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB;AAEH,SAVL;AAAA,kBAYMG,KAAD,iBACD,QAAC,IAAD;AAAA,kCACI,QAAC,GAAD;AAAA,mCACK,QAAC,SAAD,OACOA,KADP;AAEG,cAAA,IAAI,EAAC,UAFR;AAGG,cAAA,WAAW,EAAC,UAHf;AAIG,cAAA,KAAK,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI,QAAC,GAAD;AAAA,mCACK,QAAC,SAAD,OACOA,KADP;AAEG,cAAA,IAAI,EAAC,OAFR;AAGG,cAAA,WAAW,EAAC,OAHf;AAIG,cAAA,KAAK,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,kBATJ,eAiBI,QAAC,GAAD;AAAA,mCACI,QAAC,SAAD,OACOA,KADP;AAEG,cAAA,IAAI,EAAC,UAFR;AAGG,cAAA,WAAW,EAAC,UAHf;AAIG,cAAA,KAAK,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAjBJ,eAyBI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmDH,CApDD;;KAAMT,Q;;AAsDN,MAAMU,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,SAAS,EAAED,KAAK,CAACE,WAAN,CAAkBD;AADxB,GAAP;AAGD,CAJH;;AAMA,MAAME,kBAAkB,GAAG;AACvBf,EAAAA;AADuB,CAA3B;AAIA,eAAgBC,QAAhB,C,CACA","sourcesContent":["import React from 'react';\nimport { Box, Button } from '@material-ui/core'\nimport { Formik, Form, FormikHelpers } from \"formik\"\nimport FormField from '../components/Form/FromField'\nimport { connect } from 'react-redux'\nimport { register } from '../modules/auth/authOperations'\n\ntype AddBankFormType = {\n    handleSubmit: (values: any, actions: FormikHelpers<any>) => any\n    setIsAddBank: (isOk: boolean) => void\n    // register: any\n    // isLoading: boolean\n  };\n\n//   { register, isLoading }\nconst Register: React.FC<AddBankFormType>  = () => {\n    return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\n            <Box width={500} height={400}   bgcolor=\"green\" borderRadius=\"30px\" display=\"flex\"  justifyContent=\"center\" alignItems=\"center\" >\n            <Formik\n                initialValues={{\n                        username: \"\",\n                        email: \"\",\n                        password: \"\"\n                }}\n                onSubmit={async (values, actions) => {\n                    const res = await register(values)\n                    console.log('REsult', res)\n                    \n                }}\n            >   \n                {(props) => (\n                <Form>\n                    <Box>\n                         <FormField\n                            {...props}\n                            name=\"username\"\n                            placeholder=\"username\"\n                            label=\"username\"\n                        />\n                    </Box>\n                    <Box>\n                         <FormField\n                            {...props}\n                            name=\"email\"\n                            placeholder=\"email\"\n                            label=\"email\"\n                        />\n                    </Box>\n                    <Box>\n                        <FormField\n                           {...props}\n                           name=\"password\"\n                           placeholder=\"password\"\n                           label=\"password\"\n                        />\n                    </Box>\n                    <Button type=\"submit\">\n                      Register\n                    </Button> \n                </Form>\n                )}\n             \n            </Formik>\n            </Box>\n        </Box>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      isLoading: state.authReducer.isLoading,\n    };\n  };\n\nconst mapDispatchToProps = {\n    register\n}\n\nexport default  Register\n// export default  connect (mapStateToProps, mapDispatchToProps)(Register) "]},"metadata":{},"sourceType":"module"}