{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/EntriesList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useParams } from \"react-router-dom\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport EntryItem from \"./EntryItem\";\nimport { Box } from \"@material-ui/core\";\nimport { createData } from '../../utils/createData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 250\n  }\n});\n\nconst EntriesItems = ({\n  getEntries,\n  entries,\n  isLoading\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    userId,\n    date\n  } = useParams();\n  let total = entries.reduce((acc, item) => {\n    return acc + Number(item.amount);\n  }, 0);\n  const rows = entries.map(e => createData(e.id, e.catagorie, e.amount));\n  useEffect(() => {\n    getEntries(userId, date);\n  }, [getEntries, date, userId]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Day spending: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      pageSize: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), entries.map(item => {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(EntryItem, { ...item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Box, {\n      children: [\"Total: \", total, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EntriesItems, \"SZ09BAdVf/gkN/Ppc2nCfX4yD0A=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = EntriesItems;\nexport default EntriesItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntriesItems\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/EntriesList.tsx"],"names":["React","useEffect","makeStyles","useParams","DataGrid","EntryItem","Box","createData","useStyles","table","minWidth","EntriesItems","getEntries","entries","isLoading","classes","userId","date","total","reduce","acc","item","Number","amount","rows","map","e","id","catagorie"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAGA,SACEC,GADF,QASO,mBATP;AAUA,SAASC,UAAT,QAA2B,wBAA3B;;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAC;AAC3BO,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL;AADoB,CAAD,CAA5B;;AAOA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA;AAAvB,CAAD,KAAwC;AAAA;;AAC3D,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM;AAAEQ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmBd,SAAS,EAAlC;AACA,MAAIe,KAAa,GAAGL,OAAO,CAACM,MAAR,CAAe,CAACC,GAAD,EAAMC,IAAN,KAAe;AAChD,WAAOD,GAAG,GAAGE,MAAM,CAACD,IAAI,CAACE,MAAN,CAAnB;AACD,GAFmB,EAEjB,CAFiB,CAApB;AAIA,QAAMC,IAAI,GAAGX,OAAO,CAACY,GAAR,CAAaC,CAAD,IACvBnB,UAAU,CACRmB,CAAC,CAACC,EADM,EAERD,CAAC,CAACE,SAFM,EAGRF,CAAC,CAACH,MAHM,CADC,CAAb;AAQAtB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAACI,MAAD,EAASC,IAAT,CAAV;AACD,GAFQ,EAEN,CAACL,UAAD,EAAaK,IAAb,EAAmBD,MAAnB,CAFM,CAAT;;AAIA,MAAIF,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEU,IAAhB;AAAsB,MAAA,QAAQ,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF,EA4BGX,OAAO,CAACY,GAAR,CAAaJ,IAAD,IAAU;AACrB,0BACE,QAAC,GAAD;AAAA,+BACE,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANA,CA5BH,eAmCE,QAAC,GAAD;AAAA,4BAAaH,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA9DD;;GAAMP,Y;UACYH,S,EACSL,S;;;KAFrBQ,Y;AAgEN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { useParams } from \"react-router-dom\"\nimport { DataGrid } from '@material-ui/data-grid'\nimport EntryItem from \"./EntryItem\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport {\n  Box,\n  TableContainer,\n  Paper,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  Button\n} from \"@material-ui/core\"\nimport { createData } from '../../utils/createData'\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 250,\n  },\n});\n\n\nconst EntriesItems = ({ getEntries, entries, isLoading }) => {\n  const classes = useStyles();\n  const { userId, date } = useParams();\n  let total: number = entries.reduce((acc, item) => {\n    return acc + Number(item.amount);\n  }, 0);\n\n  const rows = entries.map((e) =>\n    createData(\n      e.id,\n      e.catagorie,\n      e.amount\n    )\n  );\n \n  useEffect(() => {\n    getEntries(userId, date);\n  }, [getEntries, date, userId]);\n\n  if (isLoading) {\n    return <div>Loading ...</div>;\n  }\n\n  return (\n    <div>\n      <h2>Day spending: </h2>\n      <DataGrid rows={rows} pageSize={5} />\n      {/* <TableContainer component={Paper}>\n        <Table\n          className={classes.table}\n          size=\"small\"\n          aria-label=\"a dense table\"\n        >\n          <TableBody>\n            {rows.map((row) => (\n                // <EntryItem {...row} />\n                <TableRow key={row.catagorie}>\n                  <TableCell component=\"th\" scope=\"row\" >{row.catagorie}</TableCell>\n                  <TableCell align=\"right\">{row.amount}</TableCell>\n                  <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          startIcon={<EditIcon />}\n        >\n          Edite\n        </Button>\n          </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer> */}\n      {entries.map((item) => {\n        return (\n          <Box>\n            <EntryItem {...item} />\n          </Box>\n        );\n      })}\n      <Box>Total: {total} </Box>\n    </div>\n  );\n};\n\nexport default EntriesItems;\n"]},"metadata":{},"sourceType":"module"}