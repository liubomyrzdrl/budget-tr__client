{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Form/FormInput.tsx\";\nimport React from 'react';\nimport { FormControl, Input } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FieldForm = ({\n  name,\n  field,\n  placeholder,\n  form,\n  type,\n  label\n}) => {\n  const typeInput = type === \"\" ? \"text\" : \"textarea\";\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    children: /*#__PURE__*/_jsxDEV(Input, { ...field,\n      name: name,\n      placeholder,\n      type: typeInput,\n      style: {\n        alignSelf: \"center\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = FieldForm;\nexport default FieldForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FieldForm\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Form/FormInput.tsx"],"names":["React","FormControl","Input","FieldForm","name","field","placeholder","form","type","label","typeInput","alignSelf"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AAEA,SAAoBC,WAApB,EAAiCC,KAAjC,QAA8D,mBAA9D;;;AAWA,MAAMC,SAAkC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA,IAA5B;AAAkCC,EAAAA,IAAlC;AAAwCC,EAAAA;AAAxC,CAAD,KAAqD;AAE5F,QAAMC,SAAS,GAAGF,IAAI,KAAK,EAAT,GAAc,MAAd,GAAuB,UAAzC;AACA,sBACI,QAAC,WAAD;AAAA,2BAEU,QAAC,KAAD,OAAWH,KAAX;AAAkB,MAAA,IAAI,EAAED,IAAxB;AAAmCE,MAAAA,WAAnC;AAAiD,MAAA,IAAI,EAAEI,SAAvD;AAAkE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb;AAAzE;AAAA;AAAA;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAVD;;KAAMR,S;AAYN,eAAeA,SAAf","sourcesContent":["import React  from 'react';\nimport { FormikValues } from 'formik'\nimport { FormLabel, FormControl, Input, FormHelperText } from '@material-ui/core';\n\ntype FieldFormType = {\n    name: string\n    field: FormikValues\n    form: FormikValues\n    placeholder: string\n    type?: string\n    label: string\n}\n\nconst FieldForm: React.FC<FieldFormType> = ({ name, field, placeholder, form, type, label }) => {\n  \n    const typeInput = type === \"\" ? \"text\" : \"textarea\"\n    return (\n        <FormControl>\n                  {/* <FormLabel htmlFor={name}>{label}</FormLabel> */}\n                  <Input {...field} name={name} {...{placeholder}} type={typeInput} style={{ alignSelf: \"center\"}} />\n                  {/* <FormHelperText>{form.errors.name}</FormHelperText> */}\n         </FormControl>\n    );\n};\n\nexport default FieldForm;"]},"metadata":{},"sourceType":"module"}