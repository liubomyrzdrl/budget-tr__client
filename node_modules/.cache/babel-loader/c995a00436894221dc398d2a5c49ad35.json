{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/Entries.tsx\";\nimport React from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport FormField from \"../Form/FromField\"; // interface BanksListPropsType {\n//   get: any;\n//   isLoading: boolean;\n//   banks: Array<BankType>;\n//   createBank:(bank: BankType) => Promise<boolean>;\n//   updateBank: (bank: BankType) => Promise<boolean>;\n//   deleteBank: (_id: string) => Promise<boolean>;\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Entries = () => {\n  // useEffect(() => {\n  //   get();\n  // }, [get]);\n  // if (isLoading) {\n  //   return <div>Loading ...</div>;\n  // }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Entries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        onSubmit: async (values, actions) => {\n          // alert(JSON.stringify(values, null, 2));\n          console.log('REsult', values);\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(FormField, { ...props,\n              name: \"email\",\n              placeholder: \"email\",\n              label: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(FormField, { ...props,\n              name: \"password\",\n              placeholder: \"password\",\n              label: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}; // const mapStateToProps = (state) => {\n//   return {\n//     isLoading: state.banksReducer.isLoading,\n//   };\n// };\n// const mapDispatchToState = {\n// };\n\n\n_c = Entries;\nexport default Entries; // export default connect(mapStateToProps, mapDispatchToState)(BanksList);\n\nvar _c;\n\n$RefreshReg$(_c, \"Entries\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/Entries.tsx"],"names":["React","Box","Button","Formik","Form","FormField","Entries","email","password","values","actions","console","log","props"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,mBAA5B;AAEA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AAEA,OAAOC,SAAP,MAAsB,mBAAtB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,OAAqB,GAAG,MAAM;AAClC;AACA;AACA;AAEA;AACA;AACA;AAEA,sBACE,QAAC,GAAD;AAAA,4BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,eAEG,QAAC,GAAD;AAAA,6BACS,QAAC,MAAD;AACI,QAAA,aAAa,EAAE;AACXC,UAAAA,KAAK,EAAE,EADI;AAEXC,UAAAA,QAAQ,EAAE;AAFC,SADnB;AAKI,QAAA,QAAQ,EAAE,OAAOC,MAAP,EAAeC,OAAf,KAA2B;AACjC;AAGAC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;AAEH,SAXL;AAAA,kBAaMI,KAAD,iBACD,QAAC,IAAD;AAAA,kCACI,QAAC,GAAD;AAAA,mCACI,QAAC,SAAD,OACQA,KADR;AAEI,cAAA,IAAI,EAAC,OAFT;AAGI,cAAA,WAAW,EAAC,OAHhB;AAII,cAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI,QAAC,GAAD;AAAA,mCACI,QAAC,SAAD,OACQA,KADR;AAEI,cAAA,IAAI,EAAC,UAFT;AAGI,cAAA,WAAW,EAAC,UAHhB;AAII,cAAA,KAAK,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBATJ,eAiBI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA;AADT;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CArDD,C,CAsDA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;;KA/DMP,O;AAiEN,eAAeA,OAAf,C,CACA","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { login } from \"../../modules/auth/authOperations\";\nimport FormField from \"../Form/FromField\";\n\n\n\n\n// interface BanksListPropsType {\n//   get: any;\n//   isLoading: boolean;\n//   banks: Array<BankType>;\n//   createBank:(bank: BankType) => Promise<boolean>;\n//   updateBank: (bank: BankType) => Promise<boolean>;\n//   deleteBank: (_id: string) => Promise<boolean>;\n// }\n\nconst Entries: React.FC<{}> = () => {\n  // useEffect(() => {\n  //   get();\n  // }, [get]);\n\n  // if (isLoading) {\n  //   return <div>Loading ...</div>;\n  // }\n\n  return (\n    <Box>\n       <h4>Entries</h4>\n       <Box>\n                <Formik\n                    initialValues={{\n                        email: \"\",\n                        password: \"\"\n                    }}\n                    onSubmit={async (values, actions) => {\n                        // alert(JSON.stringify(values, null, 2));\n                   \n                       \n                        console.log('REsult', values)\n                        \n                    }}\n                >   \n                    {(props) => (\n                    <Form>\n                        <Box>\n                            <FormField\n                                {...props}\n                                name=\"email\"\n                                placeholder=\"email\"\n                                label=\"email\"\n                            />\n                        </Box>\n                        <Box>\n                            <FormField\n                                {...props}\n                                name=\"password\"\n                                placeholder=\"password\"\n                                label=\"password\"\n                            />\n                        </Box>\n                        <Button type=\"submit\">\n                              Login\n                        </Button>    \n                    </Form>\n                    )}\n                </Formik>\n            </Box>\n    </Box>\n  );\n};\n// const mapStateToProps = (state) => {\n//   return {\n    \n//     isLoading: state.banksReducer.isLoading,\n//   };\n// };\n\n// const mapDispatchToState = {\n  \n// };\n\nexport default Entries;\n// export default connect(mapStateToProps, mapDispatchToState)(BanksList);\n"]},"metadata":{},"sourceType":"module"}