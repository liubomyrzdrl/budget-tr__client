{"ast":null,"code":"import { handleActions } from \"redux-actions\";\nimport { getEntriesStart, getEntriesSuccess, getEntriesError, createEntryStart, createEntrySuccess, createEntryError, updateEntryStart, updateEntrySuccess, updateEntryError, deleteEntryStart, deleteEntrySuccess, deleteEntryError } from \"./entriesActions\";\nconst INITIAL_STATE = {\n  items: [],\n  isLoading: false,\n  isSuccess: false,\n  isError: null\n};\nconst entriesReducer = handleActions({\n  [getEntriesStart.toString()]: state => {\n    return { ...state,\n      isLoading: true\n    };\n  },\n  [getEntriesSuccess.toString()]: (state, {\n    payload\n  }) => {\n    return { ...state,\n      items: payload,\n      isLoading: false,\n      isSuccess: true\n    };\n  },\n  [getEntriesError.toString()]: state => {\n    return { ...state,\n      isLoading: false,\n      isError: null\n    };\n  },\n  [createEntryStart.toString()]: state => {\n    console.log(\"createEntrieStart\", state);\n    return { ...state,\n      isLoading: true\n    };\n  },\n  [createEntrySuccess.toString()]: (state, {\n    payload\n  }) => {\n    //state.items.unshift(payload)\n    // state.items.concat(payload)\n    console.log('CreateBankSuccessPayload');\n    return { ...state,\n      items: [payload, ...state.items],\n      isLoading: false,\n      isSuccess: true\n    };\n  },\n  [createEntryError.toString()]: state => {\n    return { ...state,\n      isLoading: false,\n      isError: null\n    };\n  },\n  [updateEntryStart.toString()]: state => {\n    return { ...state,\n      isLoading: true\n    };\n  },\n  [updateEntrySuccess.toString()]: (state, {\n    payload\n  }) => {\n    var _state$items;\n\n    console.log('Uodate PAYLOAD', payload);\n    return { ...state,\n      items: (_state$items = state.items) === null || _state$items === void 0 ? void 0 : _state$items.map(item => {\n        if (item.data.id === payload.id) {\n          item.data = payload;\n        }\n\n        return item;\n      }),\n      isLoading: false,\n      isSuccess: true\n    };\n  },\n  [updateEntryError.toString()]: state => {\n    return { ...state,\n      isLoading: false,\n      isError: null\n    };\n  },\n  [deleteEntryStart.toString()]: state => {\n    return { ...state,\n      isLoading: true\n    };\n  },\n  [deleteEntrySuccess.toString()]: (state, {\n    payload\n  }) => {\n    var _state$items2;\n\n    return { ...state,\n      items: (_state$items2 = state.items) === null || _state$items2 === void 0 ? void 0 : _state$items2.filter(item => item.data.id !== payload.id),\n      isLoading: false,\n      isSuccess: true\n    };\n  },\n  [deleteEntryError.toString()]: state => {\n    return { ...state,\n      isLoading: false,\n      isError: null\n    };\n  }\n}, INITIAL_STATE);\nexport default entriesReducer;","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/modules/entries/entriesReducer.ts"],"names":["handleActions","getEntriesStart","getEntriesSuccess","getEntriesError","createEntryStart","createEntrySuccess","createEntryError","updateEntryStart","updateEntrySuccess","updateEntryError","deleteEntryStart","deleteEntrySuccess","deleteEntryError","INITIAL_STATE","items","isLoading","isSuccess","isError","entriesReducer","toString","state","payload","console","log","map","item","data","id","filter"],"mappings":"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","sourcesContent":["import { handleActions, Action } from \"redux-actions\";\nimport {\n  getEntriesStart,\n  getEntriesSuccess,\n  getEntriesError,\n  GetEntriesSuccessPayload,\n  CreateEntrySuccessPayload,\n  createEntryStart,\n  createEntrySuccess,\n  createEntryError,\n  CombinedPayloads,\n  updateEntryStart,\n  updateEntrySuccess,\n  updateEntryError,\n  UpdateEntrySuccessPayload,\n  deleteEntryStart,\n  deleteEntrySuccess,\n  deleteEntryError,\n  DeleteEntrySuccessPayload,\n} from \"./entriesActions\";\nimport { EntrieType } from \"../../types\";\n \n\n// type LatestProductsType ={ \n//    items?: Array<BankType>\n//    isLoading: boolean\n//    isSuccess?: boolean\n//    isError?: boolean | any\n// }\n// type ProductType = { \n//    item?: BankType | null\n//    isLoading: boolean\n//    isSuccess?: boolean\n//    isError?: boolean | any\n// }\nexport interface StateType {\n    items: Array<EntrieType>\n    isLoading: boolean\n    isSuccess?: boolean\n    isError?: boolean | null\n}\n\nconst INITIAL_STATE: StateType = { \n    items: [],\n    isLoading: false,\n    isSuccess: false,\n    isError: null,  \n};\n\n const entriesReducer = handleActions<StateType, CombinedPayloads>(\n  {\n    [getEntriesStart.toString()]: (state): StateType => {\n      return {\n        ...state,\n        isLoading: true,      \n      };\n    },\n\n    [getEntriesSuccess.toString()]: (state,  { payload }: Action<GetEntriesSuccessPayload>): StateType => {\n     \n      return {\n        ...state,  \n          items: payload,\n          isLoading: false,\n          isSuccess: true       \n      };\n    },\n\n    [getEntriesError.toString()]: (state): StateType => {\n      return {\n        ...state, \n          isLoading: false,\n          isError: null \n      };\n    },\n\n\n    [createEntryStart.toString()]: (state): StateType => {\n      console.log(\"createEntrieStart\", state)\n      return {\n        ...state,    \n        isLoading: true,\n   \n      };\n    },\n\n    [createEntrySuccess.toString()]: (state,  { payload }:  Action<CreateEntrySuccessPayload>): StateType => {\n       //state.items.unshift(payload)\n       // state.items.concat(payload)\n      console.log('CreateBankSuccessPayload',)\n  \n      return {\n        ...state,    \n        items: [payload, ...state.items ],\n        isLoading: false,\n        isSuccess: true,\n \n      };\n    },\n\n    [createEntryError.toString()]: (state): StateType => {\n      return {\n        ...state,\n   \n          isLoading: false,\n          isError: null,\n    \n      };\n    },\n\n    [updateEntryStart.toString()]: (state): StateType => {\n   \n      return {\n        ...state,    \n        isLoading: true,\n   \n      };\n    },\n\n    [updateEntrySuccess.toString()]: (state,  { payload }:  Action<any>): StateType => {\n     \n      console.log('Uodate PAYLOAD', payload)\n      return {\n        ...state,\n    \n          items: state.items?.map(item => {\n            if(item.data.id === payload.id) {\n                item.data = payload\n            }\n            return item\n          }),\n          isLoading: false,\n          isSuccess: true,\n \n      };\n    },\n\n    [updateEntryError.toString()]: (state): StateType => {\n      return {\n        ...state,   \n          isLoading: false,\n          isError: null,    \n      };\n    },\n\n\n    [deleteEntryStart.toString()]: (state): StateType => {\n   \n      return {\n        ...state,    \n        isLoading: true,\n   \n      };\n    },\n\n    [deleteEntrySuccess.toString()]: (state,  { payload }:  Action<any>): StateType => {\n      return {\n        ...state,    \n          items: state.items?.filter(item => item.data.id !== payload.id),\n          isLoading: false,\n          isSuccess: true,\n \n      };\n    },\n\n    [deleteEntryError.toString()]: (state): StateType => {\n      return {\n        ...state,   \n          isLoading: false,\n          isError: null,    \n      };\n    },\n  },\n  INITIAL_STATE\n);\n\nexport default entriesReducer;"]},"metadata":{},"sourceType":"module"}