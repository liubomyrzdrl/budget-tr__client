{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Form/Entries.tsx\";\nimport React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// interface BanksListPropsType {\n//   get: any;\n//   isLoading: boolean;\n//   banks: Array<BankType>;\n//   createBank:(bank: BankType) => Promise<boolean>;\n//   updateBank: (bank: BankType) => Promise<boolean>;\n//   deleteBank: (_id: string) => Promise<boolean>;\n// }\nconst Entries = () => {\n  // useEffect(() => {\n  //   get();\n  // }, [get]);\n  // if (isLoading) {\n  //   return <div>Loading ...</div>;\n  // }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Entries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}; // const mapStateToProps = (state) => {\n//   return {\n//     isLoading: state.banksReducer.isLoading,\n//   };\n// };\n// const mapDispatchToState = {\n// };\n\n\n_c = Entries;\nexport default Entries; // export default connect(mapStateToProps, mapDispatchToState)(BanksList);\n\nvar _c;\n\n$RefreshReg$(_c, \"Entries\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Form/Entries.tsx"],"names":["React","Box","Entries"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,mBAApB;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,OAAqB,GAAG,MAAM;AAClC;AACA;AACA;AAEA;AACA;AACA;AAEA,sBACE,QAAC,GAAD;AAAA,2BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAdD,C,CAeA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;;KAxBMA,O;AA0BN,eAAeA,OAAf,C,CACA","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\n\n\n\n\n// interface BanksListPropsType {\n//   get: any;\n//   isLoading: boolean;\n//   banks: Array<BankType>;\n//   createBank:(bank: BankType) => Promise<boolean>;\n//   updateBank: (bank: BankType) => Promise<boolean>;\n//   deleteBank: (_id: string) => Promise<boolean>;\n// }\n\nconst Entries: React.FC<{}> = () => {\n  // useEffect(() => {\n  //   get();\n  // }, [get]);\n\n  // if (isLoading) {\n  //   return <div>Loading ...</div>;\n  // }\n\n  return (\n    <Box>\n       <h4>Entries</h4>\n    </Box>\n  );\n};\n// const mapStateToProps = (state) => {\n//   return {\n    \n//     isLoading: state.banksReducer.isLoading,\n//   };\n// };\n\n// const mapDispatchToState = {\n  \n// };\n\nexport default Entries;\n// export default connect(mapStateToProps, mapDispatchToState)(BanksList);\n"]},"metadata":{},"sourceType":"module"}