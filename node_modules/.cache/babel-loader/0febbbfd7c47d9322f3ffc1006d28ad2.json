{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Register.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Box, Button, TextField } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport FormField from \"../components/Form/FromField\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../modules/auth/authOperations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = ({\n  register,\n  isLoading\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function handleEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: 400,\n      height: 400,\n      border: \"1px solid\",\n      flexDirection: \"column\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: \"\",\n          email: \"\",\n          password: \"\"\n        },\n        onSubmit: async (values, actions) => {\n          try {\n            await register(values);\n          } catch (error) {\n            console.log(\"error\", error);\n          }\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"email\",\n              onChange: handleEmail,\n              value: email,\n              className: classes.textField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"password\",\n              onChange: handlePassword,\n              value: password,\n              className: classes.textField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(FormField, { ...props,\n              name: \"password\",\n              placeholder: \"password\",\n              label: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), isLoading ? \"Loading ...\" : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"3B3pqDcVnkT+z/sPK6Z9zQsLP+s=\");\n\n_c = Register;\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.authReducer.isLoading\n  };\n};\n\nconst mapDispatchToProps = {\n  register\n}; //export default  Register\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Register.tsx"],"names":["React","useState","Box","Button","TextField","Formik","Form","FormField","connect","register","Register","isLoading","email","setEmail","password","setPassword","handleEmail","e","target","value","handlePassword","username","values","actions","error","console","log","props","classes","textField","mapStateToProps","state","authReducer","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Button, TextField } from \"@material-ui/core\";\nimport { Formik, Form, FormikHelpers } from \"formik\";\nimport FormField from \"../components/Form/FromField\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../modules/auth/authOperations\";\n\ntype AddBankFormType = {\n  handleSubmit: (values: any, actions: FormikHelpers<any>) => any;\n  setIsAddBank: (isOk: boolean) => void;\n  register: any;\n  isLoading: boolean;\n};\n\nconst Register: React.FC<AddBankFormType> = ({ register, isLoading }) => {\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  \n  function handleEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      height=\"100vh\"\n    >\n      <Box\n        width={400}\n        height={400}\n        border=\"1px solid\"\n       flexDirection=\"column\"\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Box>\n          <h1>Register</h1>\n        </Box>\n        <Formik\n          initialValues={{\n            username: \"\",\n            email: \"\",\n            password: \"\",\n          }}\n          onSubmit={async (values, actions) => {\n            try {\n              await register(values);\n            } catch (error) {\n              console.log(\"error\", error);\n            }\n          }}\n        >\n          {(props) => (\n            <Form>\n              <Box></Box>\n              <Box>\n                  {/* <FormField\n                                {...props}\n                                name=\"email\"\n                                placeholder=\"email\"\n                                label=\"email\"\n                            /> */}\n                  <TextField\n                    label=\"email\"\n                    onChange={handleEmail}\n                    value={email}\n                    className={classes.textField}\n                  />\n                </Box>\n                <Box>\n                  {/* <FormField\n                  {...props}\n                  name=\"password\"\n                  placeholder=\"password\"\n                  label=\"password\"\n                /> */}\n                  <TextField\n                    label=\"password\"\n                    onChange={handlePassword}\n                    value={password}\n                    className={classes.textField}\n                  />\n                </Box>\n              <Box>\n                <FormField\n                  {...props}\n                  name=\"password\"\n                  placeholder=\"password\"\n                  label=\"password\"\n                />\n              </Box>\n              {isLoading ? (\n                \"Loading ...\"\n              ) : (\n                <Button type=\"submit\">Register</Button>\n              )}\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoading: state.authReducer.isLoading,\n  };\n};\n\nconst mapDispatchToProps = {\n  register,\n};\n\n//export default  Register\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}