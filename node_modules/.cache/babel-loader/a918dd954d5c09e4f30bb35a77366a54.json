{"ast":null,"code":"import { handleActions } from 'redux-actions';\nimport { getUserStart, getUserSuccess, getUserError } from './userActions';\nconst INITIAL_STATE = {\n  isLoading: false,\n  isSuccess: false,\n  isError: false,\n  error: null,\n  user: null\n};\nexport default handleActions({\n  [getUserStart.toString()]: state => {\n    console.log('STATE', state);\n    return { ...state,\n      isLoading: true,\n      isError: false\n    };\n  },\n  [getUserSuccess.toString()]: (state, {\n    payload\n  }) => {\n    console.log(\"REDUCER\", payload);\n    return { ...state,\n      isLoading: false,\n      isError: false,\n      user: payload\n    };\n  },\n  [getUserError.toString()]: state => ({ ...state,\n    isLoading: false,\n    isError: true\n  })\n}, INITIAL_STATE);","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/modules/user/userReducer.ts"],"names":["handleActions","getUserStart","getUserSuccess","getUserError","INITIAL_STATE","isLoading","isSuccess","isError","error","user","toString","state","console","log","payload"],"mappings":"AAAA,SAASA,aAAT,QAAsC,eAAtC;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,YAAvC,QAAmF,eAAnF;AAmBA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,SAAS,EAAE,KADO;AAElBC,EAAAA,SAAS,EAAE,KAFO;AAGlBC,EAAAA,OAAO,EAAE,KAHS;AAIlBC,EAAAA,KAAK,EAAE,IAJW;AAKlBC,EAAAA,IAAI,EAAE;AALY,CAAtB;AAUA,eAAeT,aAAa,CAAgB;AACxC,GAACC,YAAY,CAACS,QAAb,EAAD,GAA4BC,KAAD,IAA0B;AACnDC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACA,WAAO,EACL,GAAGA,KADE;AAEHN,MAAAA,SAAS,EAAE,IAFR;AAGHE,MAAAA,OAAO,EAAE;AAHN,KAAP;AAMD,GATuC;AAWxC,GAACL,cAAc,CAACQ,QAAf,EAAD,GAA6B,CAACC,KAAD,EAAQ;AAAEG,IAAAA;AAAF,GAAR,KAAoD;AAC/EF,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,OAAvB;AACC,WAAO,EACL,GAAGH,KADE;AAENN,MAAAA,SAAS,EAAE,KAFL;AAGNE,MAAAA,OAAO,EAAE,KAHH;AAINE,MAAAA,IAAI,EAAEK;AAJA,KAAP;AAMF,GAnBuC;AAqBxC,GAACX,YAAY,CAACO,QAAb,EAAD,GAA4BC,KAAD,KAA2B,EAClD,GAAGA,KAD+C;AAElDN,IAAAA,SAAS,EAAE,KAFuC;AAGlDE,IAAAA,OAAO,EAAE;AAHyC,GAA3B;AArBa,CAAhB,EA2B1BH,aA3B0B,CAA5B","sourcesContent":["import { handleActions, Action } from 'redux-actions'\nimport { getUserStart, getUserSuccess, getUserError, GetUserSuccessPayload  } from './userActions';\nimport { loginSuccess, registerSuccess } from '../auth/authActions';\nimport * as appActions from '../app/appActions';\nimport { authActions } from '../auth';\nimport { UserType, UserSingleType } from '../../types';\n\n\nexport interface UserStateType {\n  isLoading: boolean\n  isSuccess?: boolean\n  isError?: boolean | null\n  error?: boolean | null\n  user?: UserSingleType | null\n  // email: string\n  // id: number\n  // password: string\n  // username: string\n}\n\nconst INITIAL_STATE = {\n    isLoading: false,\n    isSuccess: false,\n    isError: false,\n    error: null,\n    user: null, \n  \n}\n\n\nexport default handleActions<UserStateType>({\n    [getUserStart.toString()]: (state): UserStateType => {\n      console.log('STATE', state);\n      return {\n        ...state,            \n          isLoading: true,\n          isError: false,\n     \n      };\n    },\n\n    [getUserSuccess.toString()]: (state, { payload }: Action<any>): UserStateType => {\n      console.log(\"REDUCER\", payload)\n       return { \n         ...state,\n        isLoading: false,\n        isError: false,\n        user: payload,\n      }\n    },\n\n    [getUserError.toString()]: (state): UserStateType => ({\n        ...state,       \n        isLoading: false,\n        isError: true,    \n    }),\n  },\n  INITIAL_STATE,\n);\n"]},"metadata":{},"sourceType":"module"}