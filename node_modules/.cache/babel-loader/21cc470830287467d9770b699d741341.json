{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/EntriesItems.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EntriesItems = ({\n  getEntries,\n  entries,\n  isLoading\n}) => {\n  _s();\n\n  const {\n    userId,\n    date\n  } = useParams();\n  useEffect(() => {\n    getEntries(userId, date);\n  }, [getEntries, date, userId]);\n  debugger;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n\n  console.log(\"EntriesItems\", entries);\n  debugger;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"EntriesItems \", userId, date, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), entries.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Categorie: \", item.catagorie, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Amount: \", item.amount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Date: \", item.date, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EntriesItems, \"ZuUNO5iQmHi9si4M7x38GyPZJes=\", false, function () {\n  return [useParams];\n});\n\n_c = EntriesItems;\nexport default EntriesItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntriesItems\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/EntriesItems.tsx"],"names":["React","useEffect","useParams","EntriesItems","getEntries","entries","isLoading","userId","date","console","log","map","item","catagorie","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA;AAAvB,CAAD,KAAwC;AAAA;;AACzD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmBN,SAAS,EAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,UAAU,CAAEG,MAAF,EAAUC,IAAV,CAAV;AACH,GAFQ,EAEP,CAACJ,UAAD,EAAaI,IAAb,EAAoBD,MAApB,CAFO,CAAT;AAGA;;AACA,MAAID,SAAJ,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAEDG,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,OAA5B;AACA;AACA,sBACI;AAAA,4BACI;AAAA,kCAAkBE,MAAlB,EAA0BC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMH,OAAO,CAACM,GAAR,CAAYC,IAAI,IAAI;AAClB,0BACA;AAAA,gCACI;AAAA,oCAAiBA,IAAI,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCAAcD,IAAI,CAACE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,+BAAYF,IAAI,CAACJ,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAAUI,IAAI,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA,cADA;AAOH,KARC,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA1BD;;GAAMZ,Y;UACuBD,S;;;KADvBC,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst EntriesItems = ({ getEntries, entries, isLoading }) => {\n    const { userId, date } = useParams()\n    useEffect(() => {\n        getEntries( userId, date)\n    },[getEntries, date,  userId])\n    debugger\n    if( isLoading) {\n        return <div>Loading ...</div>\n    }\n    \n    console.log(\"EntriesItems\", entries)\n    debugger\n    return (\n        <div>\n            <h2>EntriesItems {userId}{date} </h2>\n            { entries.map(item => {\n                return (\n                <div key={item.id}>\n                    <div>Categorie: {item.catagorie} </div>\n                    <div>Amount: {item.amount} </div>\n                    <div>Date: {item.date} </div>\n                </div>\n                )\n            })}\n        </div>\n    );\n};\n\nexport default EntriesItems;"]},"metadata":{},"sourceType":"module"}