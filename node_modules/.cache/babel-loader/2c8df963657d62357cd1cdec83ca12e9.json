{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/EntriesList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport EntryItem from './EntryItem';\nimport { Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EntriesItems = ({\n  getEntries,\n  entries,\n  isLoading\n}) => {\n  _s();\n\n  const {\n    userId,\n    date\n  } = useParams();\n  let total = entries.reduce((acc, item) => {\n    return acc + Number(item.amount);\n  }, 0);\n  useEffect(() => {\n    getEntries(userId, date);\n  }, [getEntries, date, userId]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Day spending: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), entries.map(item => {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(EntryItem, { ...item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Box, {\n      children: [\"Total: \", total, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EntriesItems, \"ZuUNO5iQmHi9si4M7x38GyPZJes=\", false, function () {\n  return [useParams];\n});\n\n_c = EntriesItems;\nexport default EntriesItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntriesItems\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/EntriesList.tsx"],"names":["React","useEffect","useParams","EntryItem","Box","EntriesItems","getEntries","entries","isLoading","userId","date","total","reduce","acc","item","Number","amount","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,GAAT,QAAoB,mBAApB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,OAAd;AAAuBC,EAAAA;AAAvB,CAAD,KAAwC;AAAA;;AACzD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAmBR,SAAS,EAAlC;AACA,MAAIS,KAAa,GAAGJ,OAAO,CAACK,MAAR,CAAe,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC9C,WAAOD,GAAG,GAAGE,MAAM,CAACD,IAAI,CAACE,MAAN,CAAnB;AACH,GAFmB,EAEjB,CAFiB,CAApB;AAGAf,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,UAAU,CAAEG,MAAF,EAAUC,IAAV,CAAV;AACH,GAFQ,EAEP,CAACJ,UAAD,EAAaI,IAAb,EAAoBD,MAApB,CAFO,CAAT;;AAIA,MAAID,SAAJ,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMD,OAAO,CAACU,GAAR,CAAYH,IAAI,IAAI;AACpB,0BACE,QAAC,GAAD;AAAA,+BACI,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADF;AAKD,KANC,CAFN,eAUI,QAAC,GAAD;AAAA,4BAAaH,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA5BD;;GAAMN,Y;UACuBH,S;;;KADvBG,Y;AA8BN,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport EntryItem from './EntryItem';\nimport { Box } from '@material-ui/core';\n\nconst EntriesItems = ({ getEntries, entries, isLoading }) => {\n    const { userId, date } = useParams()\n    let total: number = entries.reduce((acc, item) => {\n        return acc + Number(item.amount)\n    }, 0) \n    useEffect(() => {\n        getEntries( userId, date)\n    },[getEntries, date,  userId])\n\n    if( isLoading) {\n        return <div>Loading ...</div>\n    }\n    \n    return (\n        <div>\n            <h2>Day spending: </h2>\n            { entries.map(item => {\n              return(\n                <Box>\n                    <EntryItem {...item} />                    \n                </Box>\n              )\n            }           \n            )}\n            <Box>Total: {total} </Box>\n            \n        </div>\n    );\n};\n\nexport default EntriesItems;"]},"metadata":{},"sourceType":"module"}