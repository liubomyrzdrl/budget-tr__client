{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { login } from \"../modules/auth/authOperations\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nconst Login = ({\n  login\n}) => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const classes = useStyles();\n\n  function handleEmail(e) {\n    setEmail(e.target.value);\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        onSubmit: async (values, actions) => {\n          // alert(JSON.stringify(values, null, 2));\n          try {\n            await login({\n              email,\n              password\n            });\n            setEmail('');\n            setPassword('');\n          } catch (error) {\n            console.log(\"Error\", error);\n          }\n\n          history.push(\"/\");\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"email\",\n              onChange: handleEmail,\n              value: email,\n              className: classes.textField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"password\",\n              onChange: handlePassword,\n              value: password,\n              className: classes.textField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"L8xZhpzuXVuq8w5T38vmrFvul7M=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = Login;\nconst mapDispatchToProps = {\n  login\n};\nexport default connect(null, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Login.tsx"],"names":["React","useState","Formik","Form","Box","Button","TextField","makeStyles","login","connect","useHistory","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","Login","email","setEmail","password","setPassword","history","classes","handleEmail","e","target","value","handlePassword","values","actions","error","console","log","push","props","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, FormikHelpers } from \"formik\";\nimport FormField from \"../components/Form/FromField\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { login } from \"../modules/auth/authOperations\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200,\n    },\n  }))\n  \n\ntype AddBankFormType = {\n  handleSubmit: (values: any, actions: FormikHelpers<any>) => any;\n  setIsAddBank: (isOk: boolean) => void;\n  login: any;\n};\n\nconst Login: React.FC<AddBankFormType> = ({ login }) => {\n  const[email, setEmail] = useState(\"\")\n  const[password, setPassword] = useState(\"\")\n  const history = useHistory()\n  const classes = useStyles()\n\n  function handleEmail(e) {\n    setEmail(e.target.value)\n  }\n\n  function handlePassword(e) {\n    setPassword(e.target.value)\n  }\n  return (\n    <Box\n      \n    >\n      <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      height=\"100vh\">\n        <Formik\n          initialValues={{\n            email: \"\",\n            password: \"\",\n          }}\n          onSubmit={async (values, actions) => {\n            // alert(JSON.stringify(values, null, 2));\n            try {\n                 await login({\n                    email,\n                    password\n                })\n                setEmail('')\n                setPassword('')\n            } catch (error) {\n                console.log(\"Error\", error);\n            }\n            \n            history.push(\"/\");\n           \n          }}\n        >\n          {(props) => (\n            <Form>\n              <Box>\n                {/* <FormField\n                                {...props}\n                                name=\"email\"\n                                placeholder=\"email\"\n                                label=\"email\"\n                            /> */}\n                <TextField            \n                  label=\"email\"\n                  onChange={handleEmail}\n                  value={email}                  \n                  className={classes.textField}\n                />\n              </Box>\n              <Box>\n                {/* <FormField\n                  {...props}\n                  name=\"password\"\n                  placeholder=\"password\"\n                  label=\"password\"\n                /> */}\n                <TextField            \n                  label=\"password\"\n                  onChange={handlePassword}\n                  value={password}                  \n                  className={classes.textField}\n                />\n              </Box>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\">Login</Button>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Box>\n  );\n};\nconst mapDispatchToProps = {\n  login,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}