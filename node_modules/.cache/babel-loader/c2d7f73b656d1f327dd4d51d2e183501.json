{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport reducer from \"../modules\";\nconst sd; // export type MainStateType = Store<\n//   CombinedState<{\n//     appReducer: AppStateType;\n//     entryReducer: EntryStateType;\n//     authReducer: AuthStateType;\n//     userReducer: UserStateType;\n//   }>,\n//   Action<GetEntriesSuccessPayload>\n// >;\n\nconst state = createStore(reducer, applyMiddleware(thunk, logger));\nexport const useState = () => state;\nexport default state;","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/store/createSore.ts"],"names":["createStore","applyMiddleware","thunk","logger","reducer","sd","state","useState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAAmE,OAAnE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAmBA,MAAMC,EAAN,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGN,WAAW,CAACI,OAAD,EAAUH,eAAe,CAACC,KAAD,EAAQC,MAAR,CAAzB,CAAzB;AAEA,OAAO,MAAMI,QAAQ,GAAG,MAAMD,KAAvB;AAEP,eAAeA,KAAf","sourcesContent":["import { createStore, applyMiddleware, Store, CombinedState } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport reducer from \"../modules\";\nimport { Action } from \"redux-actions\";\nimport { GetEntriesSuccessPayload } from \"../modules/entries/entriesActions\";\nimport { EntryStateType } from \"../modules/entries/entriesReducer\";\nimport { AppStateType } from \"../modules/app/appReducer\";\nimport { AuthStateType } from \"../modules/auth/authReducer\";\nimport { UserStateType } from \"../modules/user/userReducer\";\n\n\nexport type MainStateType = Store<\n  CombinedState<{\n    //appReducer: AppStateType;\n    entryReducer: EntryStateType;\n    // authReducer: AuthStateType;\n    // userReducer: UserStateType;\n  }>,\n  Action<GetEntriesSuccessPayload>\n>;\n\nconst sd: MainStateType;\n\n// export type MainStateType = Store<\n//   CombinedState<{\n//     appReducer: AppStateType;\n//     entryReducer: EntryStateType;\n//     authReducer: AuthStateType;\n//     userReducer: UserStateType;\n//   }>,\n//   Action<GetEntriesSuccessPayload>\n// >;\n\nconst state = createStore(reducer, applyMiddleware(thunk, logger));\n\nexport const useState = () => state;\n\nexport default state;\n"]},"metadata":{},"sourceType":"module"}