{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/Entries.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { createEntry, getEntries } from '../../modules/entries/entriesOperation';\nimport FormField from \"../Form/FromField\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport EntriesItems from './EntriesItems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n})); // interface BanksListPropsType {\n//   get: any;\n//   isLoading: boolean;\n//   banks: Array<BankType>;\n//   createBank:(bank: BankType) => Promise<boolean>;\n//   updateBank: (bank: BankType) => Promise<boolean>;\n//   deleteBank: (_id: string) => Promise<boolean>;\n// }\n\nconst Entries = ({\n  user,\n  createEntry,\n  getEntries\n}) => {\n  _s();\n\n  const [date, setDate] = useState('2021-04-21');\n  const classes = useStyles();\n  const history = useHistory(); // useEffect(() => {\n  //   get();\n  // }, [get]);\n  // if (isLoading) {\n  //   return <div>Loading ...</div>;\n  // }\n  //  <Link to={`/entry/userId:${user.id}&date:${date}`}> </Link>\n\n  useEffect(() => {\n    history.push(`/e/${user.id}/${date}`);\n  }, [date, history, user.id]);\n\n  function handeleChange(e) {\n    console.log(e.target.value);\n    setDate(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          catagorie: \"\",\n          amount: \"\"\n        },\n        onSubmit: async (values, actions) => {\n          console.log('REsult', values);\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"date\",\n              label: \"Birthday\",\n              onChange: handeleChange,\n              value: date,\n              type: \"date\",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(FormField, { ...props,\n              name: \"amount\",\n              placeholder: \"Spent amount $\",\n              label: \"amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(FormField, { ...props,\n              name: \"catagorie\",\n              placeholder: \"Catagory\",\n              label: \"catagorie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Create Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: `/e/:userId/:date`,\n        children: /*#__PURE__*/_jsxDEV(EntriesItems, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Entries, \"xWFSuYx4AESUZgGdqy2jGgQiqP0=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Entries;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.userReducer.data //isLoading: state.banksReducer.isLoading,\n\n  };\n};\n\nconst mapDispatchToState = {\n  createEntry,\n  getEntries\n};\nexport default connect(mapStateToProps, mapDispatchToState)(Entries);\n\nvar _c;\n\n$RefreshReg$(_c, \"Entries\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/Entries.tsx"],"names":["React","useEffect","useState","Box","Button","TextField","makeStyles","connect","Formik","Form","createEntry","getEntries","FormField","Route","useHistory","EntriesItems","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","Entries","user","date","setDate","classes","history","push","id","handeleChange","e","console","log","target","value","catagorie","amount","values","actions","props","shrink","mapStateToProps","state","userReducer","data","mapDispatchToState"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Box, Button, TextField, makeStyles, } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { createEntry, getEntries } from '../../modules/entries/entriesOperation'\nimport FormField from \"../Form/FromField\"\nimport { Route, Link, useHistory, Switch  } from \"react-router-dom\"\nimport EntriesItems from './EntriesItems'\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\n// interface BanksListPropsType {\n//   get: any;\n//   isLoading: boolean;\n//   banks: Array<BankType>;\n//   createBank:(bank: BankType) => Promise<boolean>;\n//   updateBank: (bank: BankType) => Promise<boolean>;\n//   deleteBank: (_id: string) => Promise<boolean>;\n// }\n\nconst Entries: React.FC<{}> = ({ user, createEntry, getEntries }) => {\n  const [date, setDate] = useState('2021-04-21')\n  const classes = useStyles();\n  const history = useHistory()\n\n  // useEffect(() => {\n  //   get();\n  // }, [get]);\n\n  // if (isLoading) {\n  //   return <div>Loading ...</div>;\n  // }\n//  <Link to={`/entry/userId:${user.id}&date:${date}`}> </Link>\n  useEffect(() => {\n   history.push(`/e/${user.id}/${date}`)\n  },[date, history, user.id])\n  function handeleChange(e) {\n    console.log(e.target.value)\n    setDate(e.target.value)\n    \n    \n  }\n\n  return (\n    <Box>\n       {/* <h4>Entries\n         <Link to={`/e/${user.id}/${date}`}>entru</Link>\n       </h4> */}\n       <Box>\n                <Formik\n                    initialValues={{\n                        catagorie: \"\",\n                        amount: \"\"\n                    }}\n                    onSubmit={async (values, actions) => {\n                   \n                       \n                        console.log('REsult', values)\n                        \n                    }}\n                >   \n                    {(props) => (\n                    <Form>\n                    \n                        <Box>\n                        \n                        <TextField\n                            id=\"date\"\n                            label=\"Birthday\"\n                            onChange={handeleChange}\n                            value={date}\n                            type=\"date\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                            shrink: true,\n                          }}\n                        />\n                        </Box>\n                       \n                        <Box>\n                            <FormField\n                                {...props}\n                                name=\"amount\"\n                                placeholder=\"Spent amount $\"\n                                label=\"amount\"\n                            />\n                        </Box>\n                        <Box>\n                            <FormField\n                                {...props}\n                                name=\"catagorie\"\n                                placeholder=\"Catagory\"\n                                label=\"catagorie\"\n                            />\n                        </Box>\n                        <Button type=\"submit\">\n                              Create Entry\n                        </Button>    \n                    </Form>\n                    )}\n                </Formik>\n            </Box>\n    <Box>    \n        <Route path={`/e/:userId/:date`}>\n            <EntriesItems />    \n        </Route>\n    </Box>\n    </Box>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    user: state.userReducer.data,\n    //isLoading: state.banksReducer.isLoading,\n  };\n};\n\nconst mapDispatchToState = {\n  createEntry,\n  getEntries\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToState)(Entries);\n"]},"metadata":{},"sourceType":"module"}