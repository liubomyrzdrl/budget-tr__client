{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/Entries.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { createEntry, getEntries, updateEntry, deleteEntry } from \"../../modules/entries/entriesOperation\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport EntriesItems from \"./EntriesList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nconst Entries = ({\n  user,\n  createEntry,\n  getEntries,\n  updateEntry,\n  deleteEntry,\n  entries,\n  isLoading\n}) => {\n  _s();\n\n  const [date, setDate] = useState(\"2021-04-21\");\n  const [amount, setAmount] = useState(null);\n  const [catagorie, setCatagorie] = useState(\"\");\n  const classes = useStyles();\n  const history = useHistory();\n  const userId = user.id;\n  console.log('USER', user);\n  useEffect(() => {\n    history.push(`/e/${user.id}/${date}`);\n  }, [date, history, user.id]);\n\n  function handeleDate(e) {\n    console.log(e.target.value);\n    setDate(e.target.value);\n  }\n\n  function handeleCatagorie(e) {\n    console.log(e.target.value);\n    setCatagorie(e.target.value);\n  }\n\n  function handeleAmount(e) {\n    console.log(e.target.value);\n    setAmount(Number(e.target.value));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          catagorie: \"\",\n          amount: \"\"\n        },\n        onSubmit: async actions => {\n          try {\n            await createEntry({\n              amount,\n              catagorie,\n              userId: user.id,\n              date\n            });\n            setCatagorie(\"\");\n            setAmount(null);\n          } catch (error) {\n            console.log(\"Error\", error);\n          }\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mr: 15,\n              children: /*#__PURE__*/_jsxDEV(TextField, { ...props,\n                id: \"date\",\n                label: \"Trecker\",\n                onChange: handeleDate,\n                value: date,\n                type: \"date\",\n                className: classes.textField,\n                InputLabelProps: {\n                  shrink: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mb: 3,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"amount\",\n                  onChange: handeleAmount,\n                  value: amount,\n                  type: \"number\",\n                  placeholder: \"Spent Amount ($)\",\n                  className: classes.textField,\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mb: 3,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Catagory\",\n                  onChange: handeleCatagorie,\n                  value: catagorie,\n                  placeholder: \"Catagory\",\n                  className: classes.textField,\n                  InputLabelProps: {\n                    shrink: true\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                type: \"submit\",\n                disabled: catagorie === \"\" || amount === null,\n                children: \"Create Entry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: `/e/:userId/:date`,\n        children: /*#__PURE__*/_jsxDEV(EntriesItems, {\n          userId,\n          getEntries,\n          updateEntry,\n          deleteEntry,\n          entries,\n          isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Entries, \"/RsRxjewr02dRukE+8q7suUw48k=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Entries;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.userReducer.user,\n    entries: state.entriesReducer.items,\n    isLoading: state.entriesReducer.isLoading\n  };\n};\n\nconst mapDispatchToState = {\n  createEntry,\n  getEntries,\n  updateEntry,\n  deleteEntry\n};\nexport default connect(mapStateToProps, mapDispatchToState)(Entries);\n\nvar _c;\n\n$RefreshReg$(_c, \"Entries\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/Entries.tsx"],"names":["React","useEffect","useState","Box","Button","TextField","makeStyles","connect","Formik","Form","createEntry","getEntries","updateEntry","deleteEntry","Route","useHistory","EntriesItems","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","Entries","user","entries","isLoading","date","setDate","amount","setAmount","catagorie","setCatagorie","classes","history","userId","id","console","log","push","handeleDate","e","target","value","handeleCatagorie","handeleAmount","Number","actions","error","props","shrink","mapStateToProps","state","userReducer","entriesReducer","items","mapDispatchToState"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport {\n  createEntry,\n  getEntries,\n  updateEntry,\n  deleteEntry,\n} from \"../../modules/entries/entriesOperation\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport EntriesItems from \"./EntriesList\";\nimport { EntrySingleType, EntrieType, UserSingleType } from \"../../types\";\nimport { MainStateType } from \"../../store/createState\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\ntype EntriesType = {\n  user: UserSingleType;\n  entries: Array<EntrySingleType>;\n  isLoading: boolean;\n  createEntry: (entry: EntrySingleType) => EntrySingleType;\n  getEntries: (userId: number, date: string) => Array<EntrieType>;\n  updateEntry: (entry: EntrySingleType) => EntrySingleType;\n  deleteEntry: (id: number) => boolean;\n};\n\nconst Entries: React.FC<EntriesType> = ({\n  user,\n  createEntry,\n  getEntries,\n  updateEntry,\n  deleteEntry,\n  entries,\n  isLoading,\n}) => {\n  const [date, setDate] = useState(\"2021-04-21\")\n  const [amount, setAmount] = useState<number>(null)\n  const [catagorie, setCatagorie] = useState(\"\")\n  const classes = useStyles();\n  const history = useHistory();\n  const userId = user.id;\nconsole.log('USER', user)\n  useEffect(() => {\n\n      history.push(`/e/${user.id}/${date}`);\n\n  }, [date, history, user.id]);\n\n  function handeleDate(e: React.ChangeEvent<HTMLInputElement>) {\n    console.log(e.target.value);\n    setDate(e.target.value);\n  }\n\n  function handeleCatagorie(e: React.ChangeEvent<HTMLInputElement>) {\n    console.log(e.target.value);\n    setCatagorie(e.target.value);\n  }\n  function handeleAmount(e: React.ChangeEvent<HTMLInputElement>) {\n    console.log(e.target.value);\n    setAmount(Number(e.target.value));\n  }\n\n  return (\n    <Box>\n      <Box>\n        <Formik\n          initialValues={{\n            catagorie: \"\",\n            amount: \"\",\n          }}\n          onSubmit={async (actions) => {\n            try {\n              await createEntry({\n                amount,\n                catagorie,\n                userId: user.id,\n                date,\n              });\n\n              setCatagorie(\"\");\n              setAmount(null);\n            } catch (error) {\n              console.log(\"Error\", error);\n            }\n          }}\n        >\n          {(props) => (\n            <Form>\n              <Box display=\"flex\">\n                <Box mr={15}>\n                  <TextField\n                    {...props}\n                    id=\"date\"\n                    label=\"Trecker\"\n                    onChange={handeleDate}\n                    value={date}\n                    type=\"date\"\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Box>\n                <Box\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  <Box mb={3}>\n                    <TextField\n                      label=\"amount\"\n                      onChange={handeleAmount}\n                      value={amount}\n                      type=\"number\"\n                      placeholder=\"Spent Amount ($)\"\n                      className={classes.textField}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Box>\n\n                  <Box mb={3}>\n                    <TextField\n                      label=\"Catagory\"\n                      onChange={handeleCatagorie}\n                      value={catagorie}\n                      placeholder=\"Catagory\"\n                      className={classes.textField}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Box>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    disabled={catagorie === \"\" || amount === null}\n                  >\n                    Create Entry\n                  </Button>\n                </Box>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n      <Box>\n        <Route path={`/e/:userId/:date`}>\n          <EntriesItems\n            {...{ userId }}\n            {...{ getEntries }}\n            {...{ updateEntry }}\n            {...{ deleteEntry }}\n            {...{ entries }}\n            {...{ isLoading }}\n          />\n        </Route>\n      </Box>\n    </Box>\n  );\n};\nconst mapStateToProps = (state: MainStateType) => {\n  return {\n    user: state.userReducer.user,\n    entries: state.entriesReducer.items,\n    isLoading: state.entriesReducer.isLoading,\n  };\n};\n\nconst mapDispatchToState = {\n  createEntry,\n  getEntries,\n  updateEntry,\n  deleteEntry,\n};\n\nexport default connect(mapStateToProps, mapDispatchToState)(Entries);\n"]},"metadata":{},"sourceType":"module"}