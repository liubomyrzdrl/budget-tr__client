{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/Entries.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport FormField from \"../Form/FromField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n})); // interface BanksListPropsType {\n//   get: any;\n//   isLoading: boolean;\n//   banks: Array<BankType>;\n//   createBank:(bank: BankType) => Promise<boolean>;\n//   updateBank: (bank: BankType) => Promise<boolean>;\n//   deleteBank: (_id: string) => Promise<boolean>;\n// }\n\nconst Entries = () => {\n  _s();\n\n  const [date, setDate] = useState('2017-05-24');\n  const classes = useStyles(); // useEffect(() => {\n  //   get();\n  // }, [get]);\n  // if (isLoading) {\n  //   return <div>Loading ...</div>;\n  // }\n\n  function handeleChange(e) {\n    console.log(e.target.value);\n    setDate(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Entries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          catagorie: \"\",\n          amount: \"\"\n        },\n        onSubmit: async (values, actions) => {\n          // alert(JSON.stringify(values, null, 2));\n          console.log('REsult', values);\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"date\",\n              label: \"Birthday\",\n              onChange: handeleChange,\n              value: date,\n              type: \"date\",\n              className: classes.textField,\n              InputLabelProps: {\n                shrink: true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(FormField, { ...props,\n              name: \"email\",\n              placeholder: \"email\",\n              label: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(FormField, { ...props,\n              name: \"password\",\n              placeholder: \"password\",\n              label: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}; // const mapStateToProps = (state) => {\n//   return {\n//     isLoading: state.banksReducer.isLoading,\n//   };\n// };\n// const mapDispatchToState = {\n// };\n\n\n_s(Entries, \"jrhFPnK1RIU/aAEjYTfXzTx302E=\", false, function () {\n  return [useStyles];\n});\n\n_c = Entries;\nexport default Entries; // export default connect(mapStateToProps, mapDispatchToState)(BanksList);\n\nvar _c;\n\n$RefreshReg$(_c, \"Entries\");","map":{"version":3,"sources":["/Users/macbook/Documents/DEVELOPMENT/budget-tracker/client/src/components/Entries/Entries.tsx"],"names":["React","useState","Box","Button","TextField","makeStyles","Formik","Form","FormField","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","Entries","date","setDate","classes","handeleChange","e","console","log","target","value","catagorie","amount","values","actions","props","shrink"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Box, Button, TextField, makeStyles } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form } from \"formik\";\nimport { login } from \"../../modules/auth/authOperations\";\nimport FormField from \"../Form/FromField\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\n// interface BanksListPropsType {\n//   get: any;\n//   isLoading: boolean;\n//   banks: Array<BankType>;\n//   createBank:(bank: BankType) => Promise<boolean>;\n//   updateBank: (bank: BankType) => Promise<boolean>;\n//   deleteBank: (_id: string) => Promise<boolean>;\n// }\n\nconst Entries: React.FC<{}> = () => {\n  const [date, setDate] = useState('2017-05-24')\n  const classes = useStyles();\n\n  // useEffect(() => {\n  //   get();\n  // }, [get]);\n\n  // if (isLoading) {\n  //   return <div>Loading ...</div>;\n  // }\n\n  function handeleChange(e) {\n    console.log(e.target.value)\n    setDate(e.target.value)\n  }\n\n  return (\n    <Box>\n       <h4>Entries</h4>\n       <Box>\n                <Formik\n                    initialValues={{\n                        catagorie: \"\",\n                        amount: \"\"\n                    }}\n                    onSubmit={async (values, actions) => {\n                        // alert(JSON.stringify(values, null, 2));\n                   \n                       \n                        console.log('REsult', values)\n                        \n                    }}\n                >   \n                    {(props) => (\n                    <Form>\n                        <Box>\n                        <TextField\n                            id=\"date\"\n                            label=\"Birthday\"\n                            onChange={handeleChange}\n                            value={date}\n                            type=\"date\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                            shrink: true,\n                          }}\n                        />\n\n                        </Box>\n                        <Box>\n                            <FormField\n                                {...props}\n                                name=\"email\"\n                                placeholder=\"email\"\n                                label=\"email\"\n                            />\n                        </Box>\n                        <Box>\n                            <FormField\n                                {...props}\n                                name=\"password\"\n                                placeholder=\"password\"\n                                label=\"password\"\n                            />\n                        </Box>\n                        <Button type=\"submit\">\n                              Login\n                        </Button>    \n                    </Form>\n                    )}\n                </Formik>\n            </Box>\n    </Box>\n  );\n};\n// const mapStateToProps = (state) => {\n//   return {\n    \n//     isLoading: state.banksReducer.isLoading,\n//   };\n// };\n\n// const mapDispatchToState = {\n  \n// };\n\nexport default Entries;\n// export default connect(mapStateToProps, mapDispatchToState)(BanksList);\n"]},"metadata":{},"sourceType":"module"}